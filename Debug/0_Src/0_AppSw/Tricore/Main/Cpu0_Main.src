	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Tricore\\Main\\.Cpu0_Main.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc37x -D__CPU_TC37X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Tricore\\UART -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Tricore\\Main\\Cpu0_Main.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Tricore\\Main\\Cpu0_Main.src ..\\0_Src\\0_AppSw\\Tricore\\Main\\Cpu0_Main.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Cpu0_Main.c'

	
$TC162
	.sdecl	'.zrodata.IfxStm..3.cnt',data,rom
	.sect	'.zrodata.IfxStm..3.cnt'
	.align	2
.3.cnt:	.type	object
	.size	.3.cnt,4
	.word	2000000
	
	.sdecl	'.text.Cpu0_Main.core0_main',code,cluster('core0_main')
	.sect	'.text.Cpu0_Main.core0_main'
	.align	2
	
	.global	core0_main

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	     1  /**********************************************************************************************************************
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	     2   * \file Cpu0_Main.c
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	     3   * \copyright Copyright (C) Infineon Technologies AG 2019
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	     4   * 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	     5   * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	     6   * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	     7   * are agreed, use of this file is subject to following:
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	     8   * 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	     9   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    10   * 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    11   * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    12   * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    13   * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    14   * Software is furnished to do so, all subject to the following:
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    15   * 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    16   * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    17   * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    18   * derivative works of the Software, unless such copies or derivative works are solely in the form of 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    19   * machine-executable object code generated by a source language processor.
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    20   * 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    21   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    22   * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    23   * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    24   * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    25   * IN THE SOFTWARE.
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    26   *********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    27   /*\title Reset triggered by an SMU alarm
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    28   * \abstract The SMU triggers an alarm, which resets the device as preconfigured reaction.
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    29   * \description The Safety Management Unit (SMU) is configured to trigger a reset if an internal software alarm occurs.
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    30   * \name SMU_Reset_Alarm_1_KIT_TC375_LK
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    31   * \version V1.0.1
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    32   * \board AURIX TC375 lite Kit, KIT_A2G_TC375_LITE, TC37xTP_A-Step
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    33   * \keywords AURIX, SMU, SMU_Reset_Alarm_1, alarm, reset
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    34   * \documents https://www.infineon.com/aurix-expert-training/Infineon-AURIX_SMU_Reset_Alarm_1_KIT_TC375_LK-TR-v01_00_01-EN.pdf
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    35   * \documents https://www.infineon.com/aurix-expert-training/TC37A_iLLD_UM_1_0_1_12_1.chm
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    36   * \lastUpdated 2021-06-29
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    37   *********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    38  #include "Ifx_Types.h"
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    39  #include "IfxCpu.h"
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    40  #include "IfxScuWdt.h"
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    41  #include "IfxStm.h"
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    42  #include "SMU_Reset_Alarm.h"
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    43  #include "UART_Logging.h"
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    44  
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    45  IFX_ALIGN(4) IfxCpu_syncEvent g_cpuSyncEvent = 0;
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    46  
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    47  void core0_main(void)
; Function core0_main
.L5:
core0_main:	.type	func

; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     2   * \file IfxCpu.h
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     3   * \brief CPU  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     4   * \ingroup IfxLld_Cpu
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    42   * \defgroup IfxLld_Cpu_Std_Core Cpu Core Functions
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    43   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    44   * \defgroup IfxLld_Cpu_Std_Interrupt Interrupt Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    45   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    46   * \defgroup IfxLld_Cpu_Std_Cache Cache Management Functions
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    47   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    48   * \defgroup IfxLld_Cpu_Std_PerformanceCounter Performance Counter Functions
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    49   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    50   * \defgroup IfxLld_Cpu_Std_Synchronization Synchronization Functions
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    51   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    52   * \defgroup IfxLld_Cpu_Std_Utility Cpu Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    53   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    54   * \defgroup IfxLld_Cpu_Std_Enum Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    55   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    56   * \defgroup IfxLld_Cpu_Std_DataStructures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    57   * \ingroup IfxLld_Cpu_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    58   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    60  #ifndef IFXCPU_H
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    61  #define IFXCPU_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    62  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    63  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    64  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    65  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    66  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    67  #include "_Impl/IfxCpu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    68  #include "IfxSrc_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    69  #include "IfxScu_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    70  #include "IfxStm_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    71  #include "_Impl/IfxScu_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    72  #include "_Utilities/Ifx_Assert.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    73  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    74  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    76  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    77  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    78  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    79  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    80  /** \brief Convert local DSPR address to global DSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    81   * Use this macro to convert a local DSPR address (in segment 0xd00.....) to
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    82   * a global DSPR address (in segment 0x700....., 0x600....., 0x500..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    83   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    84   * Example usage:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    85   *  \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    86   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &sourceBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    87   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_DSPR(IfxCpu_getCoreId(), &destinationBuffer[i][0]);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    88   *  \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    90  #define IFXCPU_GLB_ADDR_DSPR(cpu, address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    91  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    92  /** \brief Convert local PSPR address to global PSPR address which can be accessed from the SRI bus.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    93   * Use this macro to convert a local PSPR address (in segment 0xc......) to
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    94   * a global PSPR address (in segment 0x701....., 0x601....., 0x501..... downwards) depending on
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    95   * the CPU number.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    96   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    97   *   Example usage:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    98   *   \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	    99   *     dmaChConfig.sourceAddress      = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &sourceBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   100   *     dmaChConfig.destinationAddress = IFXCPU_GLB_ADDR_PSPR(IfxCpu_getCoreId(), &destinationBufferInPsprMemory);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   101   *   \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   102   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   103  #define IFXCPU_GLB_ADDR_PSPR(cpu, address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   104  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   105  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   106  /*------------------------------Type Definitions------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   107  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   108  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   109  /** \brief Lock type Spin lock
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   110   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   111  typedef unsigned int IfxCpu_spinLock;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   112  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   113  /** \brief Lock type Mutex lock
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   114   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   115  typedef unsigned int IfxCpu_mutexLock;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   116  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   117  /** \brief Event used for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   119  typedef unsigned int IfxCpu_syncEvent;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   120  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   121  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   122  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   123  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   124  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   125  /** \addtogroup IfxLld_Cpu_Std_Enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   126   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   127  /** \brief Enumeration for the Cpu mode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   128   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   129  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   130  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   131      IfxCpu_CoreMode_halt,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   132      IfxCpu_CoreMode_run,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   133      IfxCpu_CoreMode_idle,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   134      IfxCpu_CoreMode_sleep,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   135      IfxCpu_CoreMode_stby,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   136      IfxCpu_CoreMode_unknown
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   137  } IfxCpu_CoreMode;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   138  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   139  /** \brief Performance conunter modes
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   140   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   141  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   142  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   143      IfxCpu_CounterMode_normal = 0,  /**< \brief Normal counter mode:the counter increments on their respective triggers */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   144      IfxCpu_CounterMode_task   = 1   /**< \brief Normal counter mode:additional gating control from the debug unit which allows the data gathered in the performance counters to be filtered by some specific criteria */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   145  } IfxCpu_CounterMode;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   146  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   147  /** \brief Overlay Address Mask: determines the overlay block size and the bits used for address comparison and translation
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   148   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   149  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   150  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   151      IfxCpu_OverlayAddressMask_32byte  = 0xFFF,  /**< \brief 32 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   152      IfxCpu_OverlayAddressMask_64byte  = 0xFFE,  /**< \brief 64 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   153      IfxCpu_OverlayAddressMask_128byte = 0xFFC,  /**< \brief 128 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   154      IfxCpu_OverlayAddressMask_256byte = 0xFF8,  /**< \brief 256 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   155      IfxCpu_OverlayAddressMask_512byte = 0xFF0,  /**< \brief 512 byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   156      IfxCpu_OverlayAddressMask_1KB     = 0xFE0,  /**< \brief 1K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   157      IfxCpu_OverlayAddressMask_2KB     = 0xFC0,  /**< \brief 2K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   158      IfxCpu_OverlayAddressMask_4KB     = 0xF80,  /**< \brief 4K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   159      IfxCpu_OverlayAddressMask_8KB     = 0xF00,  /**< \brief 8K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   160      IfxCpu_OverlayAddressMask_16KB    = 0xE00,  /**< \brief 16K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   161      IfxCpu_OverlayAddressMask_32KB    = 0xC00,  /**< \brief 32K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   162      IfxCpu_OverlayAddressMask_64KB    = 0x800,  /**< \brief 64K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   163      IfxCpu_OverlayAddressMask_128KB   = 0x0     /**< \brief 128K byte block size Mask */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   164  } IfxCpu_OverlayAddressMask;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   165  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   166  /** \brief Selects overlay memory used for redirection
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   167   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   168  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   169  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   170      IfxCpu_OverlayMemorySelect_core0DsprPspr = 0,  /**< \brief Redirection to Core 0 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   171      IfxCpu_OverlayMemorySelect_core1DsprPspr = 1,  /**< \brief Redirection to Core 1 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   172      IfxCpu_OverlayMemorySelect_core2DsprPspr = 2   /**< \brief Redirection to Core 2 DSPR/PSPR memory */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   173  } IfxCpu_OverlayMemorySelect;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   174  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   175  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   176  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   177      IfxCpu_ResetStatus_notCpuReset   = 0,  /**< \brief No Kernel Reset was executed */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   178      IfxCpu_ResetStatus_cpuResetBySmu = 1,  /**< \brief Kernel reset was requested by hardware since last clear (SMU) */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   179      IfxCpu_ResetStatus_cpuResetBySw  = 2   /**< \brief Kernel reset was requested by software since last clear (by writing KRST0.RST=1 and KRST1.RST=1) */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   180  } IfxCpu_ResetStatus;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   181  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   182  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   183  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   184  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   185  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   186  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   187  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   188  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   189   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   190  /** \brief counter
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   191   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   192  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   193  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   194      uint32  counter;        /**< \brief Counter value */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   195      boolean overlfow;       /**< \brief sticky overlfow */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   196  } IfxCpu_Counter;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   197  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   198  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   199  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   200  /** \addtogroup IfxLld_Cpu_Std_DataStructures
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   201   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   202  /** \brief Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   203   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   204  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   205  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   206      IfxCpu_Counter instruction;       /**< \brief Instruction counter */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   207      IfxCpu_Counter clock;             /**< \brief CPU clock counter */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   208      IfxCpu_Counter counter1;          /**< \brief Multi counter 1 */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   209      IfxCpu_Counter counter2;          /**< \brief Multi counter 2 */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   210      IfxCpu_Counter counter3;          /**< \brief Multi counter 3 */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   211  } IfxCpu_Perf;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   213  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   214  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   215  /** \addtogroup IfxLld_Cpu_Std_Core
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   216   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   217  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   218  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   219  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   220  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   221  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   222  /** \brief API to get the address for CPU HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   223   * \param cpu Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   224   * \return CPU module register address
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   225   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   226  IFX_INLINE Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   227  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   228  /** \brief API to get core id of the CPU of the caller.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   229   * Caution: Core id of the cpu's may not be continguous and shouldn't be used to index cpu.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   230   * Use IfxCpu_getCoreIndex() to get cpu no.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   231   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   232   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   233  IFX_INLINE IfxCpu_Id IfxCpu_getCoreId(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   234  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   235  /** \brief API to get cpu index of the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   236   * Note: This api can be used whereever cpu no/index is needed.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   237   * \return Resource index of the CPU.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   238   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   239  IFX_INLINE IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   240  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   241  /** \brief API to initialize the context save area of the CPU where this is called.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   242   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   243   * This API can initialize the CSA of the host CPU where this API is called. This API
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   244   * shall not be used to initialize the CSA of another CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   245   * \param csaBegin Pointer to start of context save area
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   246   * \param csaEnd Pointer to end of context save area
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   247   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   248   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   249  IFX_INLINE void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   250  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   251  /** \brief Set/Clear safety task identifier (PSW.S) on current CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   252   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   254  IFX_INLINE void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   256  /** \brief Triggers Software Reset
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   257   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   258   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   259  IFX_INLINE void IfxCpu_triggerSwReset(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   260  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   261  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   262  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   263  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   265  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   266   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   267   * \return Current mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   268   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   269  IFX_EXTERN IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   271  /** \brief API to get current mode of CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   272   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   273   * \return Resource index of the CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   275  IFX_EXTERN IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   276  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   277  /** \brief API to set mode of the CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   278   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   279   * \param mode CPU mode to be set by this API
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   280   * \return Success status of the activity (setting the core mode).
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   281   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   282   * \retval FALSE: If the activity can't be performed.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   283   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   284  IFX_EXTERN boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   286  /** \brief API to set the program counter for the CPU specified.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   287   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   288   * \param programCounter Program counter value to be set
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   289   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   290   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   291   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   292   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   293  IFX_EXTERN boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   295  /** \brief API to set the program counter for the CPU specified and start the CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   296   * \param cpu Pointer to the CPU HW module (register memory map)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   297   * \param programCounter Program counter value to start the CPU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   298   * \return success status of the activity (setting program counter value).
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   299   * \retval TRUE: If the activity successfully be performed.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   300   * \retval FALSE: If the activity can't be performed
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   301   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   302  IFX_EXTERN boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   303  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   304  /** \brief To request reset of a particular core, given by coreId
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   305   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   306   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   307  IFX_EXTERN void IfxCpu_triggerCpuReset(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   308  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   309  /** \brief Retrieve the cause of reset(no reset, hardware(SMU) or software) since last clear by reading KRST0.RSTSTAT and clear it.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   310   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   311  IFX_EXTERN IfxCpu_ResetStatus IfxCpu_getCpuResetStatus(IfxCpu_ResourceCpu coreIndex);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   312  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   313  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   315  /** \addtogroup IfxLld_Cpu_Std_Interrupt
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   316   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   317  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   318  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   319  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   320  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   321  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   322  /** \brief API to get the status of global interrupt enable (ICR.IE) for the CPU which calls this API
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   323   * This API provides the status of CPU where this API is called
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   324   * \return Status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   325   * \retval TRUE: Global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   326   * \retval FALSE: Global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   327   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   328  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   329  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   330  /** \brief API to disable global interrupt and return the previous status.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   331   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   332   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   333   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   334   * \return Previous status of global interrupt enable bit.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   335   * \retval TRUE: Previously, global interrupts enabled.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   336   * \retval FALSE: Previously, global interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   338  IFX_INLINE boolean IfxCpu_disableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   340  /** \brief API to enable global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   341   * This API simply enables the global interrupt.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   342   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   344  IFX_INLINE void IfxCpu_enableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   346  /** \brief Disable the Global Interrupt
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   347   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   348   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   349  IFX_INLINE void IfxCpu_forceDisableInterrupts(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   350  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   351  /** \brief API to restore global interrupt with that of the passed parameter.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   352   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   353   * This API can be used only to disable the global interrupts of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   354   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   355   * \param enabled Previous status of the global interrupt enable bit
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   356   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   357   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   358  IFX_INLINE void IfxCpu_restoreInterrupts(boolean enabled);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   359  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   360  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   361  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   362  /** \addtogroup IfxLld_Cpu_Std_Cache
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   363   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   364  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   365  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   366  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   367  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   368  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   369  /** \brief API to enable/ disable the data cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   370   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   371   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   372   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   373   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   374   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   375   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   376  IFX_INLINE void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   378  /** \brief API to enable/ disable the instruction cacheability for selected segments
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   379   * With this API cacheability for one or more segment can be enabled/disabled for the CPU core where this API is called.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   380   * \Note This API is to be called only if the PCACHE or DCACHE are not enabled before
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   381   * \param segmentNumberMask Mask where bitfield 0 represents segment 0 and bitfield 16 represent segment F.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   382   * \param enable TRUE: to enable the cacheability for selected segment, FALSE: to disable.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   383   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   384   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   385  IFX_INLINE void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   387  /** \brief API to invalidate the program cache
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   388   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   389   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   390  IFX_INLINE void IfxCpu_invalidateProgramCache(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   391  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   392  /** \brief API to determine if an address is in a cachable or non-cachable Flash/LMU section
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   393   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   394   * \return Status TRUE/FALSE
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   395   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   396  IFX_INLINE boolean IfxCpu_isAddressCachable(void *address);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   397  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   398  /** \brief API to enable or bypass the data cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   399   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   400   * This API can be used only to enable or bypass the data cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   401   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   402   * \param enable Command to enable or bypass the data cache
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   403   * TRUE: Enable the data cache.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   404   * FALSE: Bypass the data cache.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   405   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   406   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   407  IFX_INLINE void IfxCpu_setDataCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   408  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   409  /** \brief API to enable or bypass the program cache for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   410   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   411   * This API can be used only to enable or bypass the program cache of caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   412   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   413   * \param enable Command to enable or bypass the program cache.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   414   * TRUE: Enable the program cache.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   415   * FALSE: Bypass the program cache
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   416   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   417   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   418  IFX_INLINE void IfxCpu_setProgramCache(boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   420  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   421  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   422  /** \addtogroup IfxLld_Cpu_Std_PerformanceCounter
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   423   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   424  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   425  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   426  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   427  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   428  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   429  /** \brief API to read the clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   430   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   431   * This API can be used to read clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   432   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   433   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   434   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   435  IFX_INLINE uint32 IfxCpu_getClockCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   436  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   437  /** \brief API to get sticky overflow bit of clock counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   438   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   439   * This API can be used to get sticky overflow bit of clock counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   440   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   441   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   442   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   443   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   444   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   445   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   446   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   447   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   448  IFX_INLINE boolean IfxCpu_getClockCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   449  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   450  /** \brief API to read the instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   451   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   452   * This API can be used to read instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   453   * used for this activity towards other CPUs
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   454   * \return Counter value. 0 to 0x7FFFFFFF.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   455   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   456  IFX_INLINE uint32 IfxCpu_getInstructionCounter(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   458  /** \brief API to get sticky overflow bit of Instruction counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   459   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   460   * This API can be used to get sticky overflow bit of Instruction counter of only the caller CPU.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   461   * It cannot be used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   462   * This API also clears the sticky overflow after the read. While reading the sticky bit this API disables
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   463   * the counter for short time. (otherwise sticky bit cannot be cleared). This API shall be used after
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   464   * reading the counter
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   465   * \return Status of sticky overflow bit.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   466   * \retval TRUE: Sticky overflow bit is set.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   467   * \retval FALSE: Sticky overflow bit is reset
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   468   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   469  IFX_INLINE boolean IfxCpu_getInstructionCounterStickyOverflow(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   470  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   471  /** \brief API to read the performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   472   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   473   * \return counter value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   474   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   475  IFX_INLINE uint32 IfxCpu_getPerformanceCounter(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   476  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   477  /** \brief API to get sticky overflow bit of performance counter for the CPU, which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   478   * This is generic function to get sticky overflow bit of any performance counters
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   479   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   480   * \return Status
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   481   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   482  IFX_INLINE boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   483  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   484  /** \brief Reset and start instruction, clock and multi counters
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   485   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   486   * Reset and start CCNT, ICNT, M1CNT, M2CNT, M3CNT. the overflow bits are cleared.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   487   * \param mode Counter mode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   490  IFX_INLINE void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   492  /** \brief API to enable or disable performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   493   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   494   * This API can be used to enable or disable performance counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   495   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   496   * \param enable enable Command to enable or disable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   497   * TRUE: Enable the performance counter.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   498   * FALSE: Disable the performance counter
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   499   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   501  IFX_INLINE void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   503  #if !((defined(__cplusplus)) && (defined(__TASKING__)))
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   504  /** \brief Stop instruction and clock counters, return their values
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   505   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   506   * Stop CCNT, ICNT, M1CNT, M2CNT, M3CNT and return their values;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   507   *  \Note The CCTRL is reset to 0, for more accurate measurements and has to be initialized again before strating the next performance measurement.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   508   * \return Performance counter result
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   509   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   510  IFX_INLINE IfxCpu_Perf IfxCpu_stopCounters(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   511  #endif
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   512  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   513  /** \brief API to update clock counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   514   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   515   * This API can be used to update clock counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   516   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   517   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   518   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   520  IFX_INLINE void IfxCpu_updateClockCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   522  /** \brief API to update Instruction counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   523   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   524   * This API can be used to update Instruction counter of only the caller CPU. It cannot be
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   525   * used for this activity towards other CPUs.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   526   * \param count Counter value to be updated. 0 to 0x7FFFFFFF
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   527   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   528   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   529  IFX_INLINE void IfxCpu_updateInstructionCounter(uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   530  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   531  /** \brief API to update performance counter for the CPU which calls this API.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   532   * This is generic function to update any of the performance counters
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   533   * \param address Address
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   534   * \param count Count
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   535   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   536   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   537  IFX_INLINE void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   539  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   540  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   541  /** \addtogroup IfxLld_Cpu_Std_Synchronization
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   542   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   544  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   545  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   546  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   547  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   548  /** \brief API to acquire the mutex (binary semaphore).
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   549   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   550   * This API can be used to acquire/get the mutex.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   551   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   552   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   553   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   554   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   555   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   556   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   557   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   558   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   559   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   560   *    }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   561   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   562   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   563   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   564  IFX_EXTERN boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   566  /** \brief API to unlock the mutex .
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   567   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   568   * This API can be used to unlock the previously acquired mutex
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   569   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   570   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   571   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   572   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   573   *    IfxCpu_mutexLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   574   *    boolean flag = IfxCpu_acquireMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   575   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   576   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   577   *      IfxCpu_releaseMutex(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   578   *    }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   579   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   580   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   581   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   582  IFX_EXTERN void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   583  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   584  /** \brief API to unlock the resource .
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   585   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   586   * This API can be used to unlock the previously acquired lock
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   587   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   588   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   589   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   590  IFX_EXTERN void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   591  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   592  /** \brief API to lock the resource in spin mode with the given timeout.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   593   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   594   * This API can be used to spin lock for the lock for the given timeout period.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   595   * \param lock lock pointer
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   596   * \param timeoutCount loop counter value used for timeout to acquire lock
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   597   * \return TRUE : lock acquired successfully. FALSE: Failed to acquire the lock
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   598   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   599   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   600   *    IfxCpu_spinLock resourceLock;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   601   *    boolean flag = IfxCpu_setSpinLock(&resourceLock, 0xFFFF);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   602   *    if (flag){
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   603   *      // critical section
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   604   *      IfxCpu_resetSpinLock(&resourceLock);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   605   *    }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   606   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   607   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   608   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   609  IFX_EXTERN boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   610  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   611  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   612  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   613  /** \addtogroup IfxLld_Cpu_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   614   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   616  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   617  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   618  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   619  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   620  /** \brief This function disables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   621   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   622   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   623   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   624   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   625  IFX_EXTERN void IfxCpu_disableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   627  /** \brief This function configures and enables the overlay memory.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   628   * Note:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   629   * The data overlay provides the capability to redirect selected data accesses to the Overlay memory. Data accesses made by the TriCore to Program Flash, Online Data Acquisition space, or EBU space can be redirected. Overlay memory may be located in the Local Memory (if present), in the Emulation Memory (Emulation Device only), or in the EBU space,or in the DPSR/PSPR memory.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   630   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   631   * How the overlay Memory works?
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   632   * Any data access to segment 8 or segment A is checked against all the activated overlay blocks. For each activated overlay block, address bits 27..5 are compared with the target base address , and this bit-wise comparison is qualified by the content of address mask. Address bits participate in the comparison if the corresponding mask bits are set to one. The access is redirected, if all the address bits selected by mask equal to the corresponding bits in target address.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   633   * The address for redirection is constructed as follows:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   634   * 1. Address bits 31..22 are set according to the overlay memory selection and the cache-ability of the original address.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   635   * 2. For address bits 21..5:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   636   * - If the corresponding address mask bit is set, the address bit value is taken from overlay base address .
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   637   * - If the corresponding address mask bit is cleared, the address bit value is taken from the original address.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   638   * 3. Address bits 4..0 are always taken directly from the original address.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   639   * If there is no redirection, the original address is used to perform the access.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   640   * Target address ranges for activated overlay blocks should not overlap or an exception may occur.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   641   * \param cpu Core no
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   642   * \param overlayBlock Overlay Block
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   643   * \param overlayMemorySelect Overlay Memory Select
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   644   * \param overlayAddressMask overlay Address Mask
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   645   * \param targetBaseAddress Target Base address (i.e Source address to be re-directed)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   646   * \param overlayBaseAddress Overlay or Re-directed Base address (Bits 21..5 of the base address the overlay memory block in the overlay memory)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   647   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   648   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   649  IFX_EXTERN void IfxCpu_enableOverlayBlock(IfxCpu_ResourceCpu cpu, uint16 overlayBlock, IfxCpu_OverlayMemorySelect overlayMemorySelect, IfxCpu_OverlayAddressMask overlayAddressMask, uint32 targetBaseAddress, uint32 overlayBaseAddress);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   650  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   651  /** \brief API to get random value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   652   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   653   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   654   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   655  IFX_EXTERN uint32 IfxCpu_getRandomValue(uint32 *seed);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   656  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   657  /** \brief API to get random value with in the range
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   658   * \param seed Pointer to seed value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   659   * \param min minimum range value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   660   * \param max maximum range value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   661   * \return random value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   662   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   663  IFX_EXTERN uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   664  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   665  /** \brief This function waits till all the cores have set their corresponding bits in the event. This function along with
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   666   * IfxCpu_emitEvent() are used to achieve the synchronisation between the configured cores. By default
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   667   * "IFXCPU_CFG_ALLCORE_DONE" macro defined for all the cores. In case the user wants to check for
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   668   * synchronisation among the required cores, the macro can be redefined with the value accroing to the
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   669   * CORE_ID register.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   670   * The IfxCpu_emitEvent() is to be used in the Main functions of the Cores where the user wants to check for synchronisation.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   671   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   672   * e.g:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   673   * 1. Check for synchronisation between core 0 and core 5
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   674   * # define 0x41U
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   675   * 2. Check for synchronisation between core 0 to core 5
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   676   * # define 0x5FU
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   677   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   678   * Note:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   679   * Core id values read from CORE_ID register will be as shown below. The value indicates the position of the bit needs to be set while building the macro.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   680   * Core 0: 0
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   681   * Core 1: 1
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   682   * Core 2: 2
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   683   * Core 3: 3
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   684   * Core 4: 4
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   685   * Core 5: 6
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   686   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   687   * \param timeoutMilliSec timeout in millisec
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   688   * \return Error condition
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   689   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   690   * The functions IfxCpu_waitEvent and IfxCpu_emitEvent are used to achieve synchronisation between all cores (i.e individual cores wait till all cores have reached the synchronisation point). The IfxCpu_waitEvent returns 1 incase a timeout occurs.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   691   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   692   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   693   * // Global variable. preferably located in  shared memory.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   694   * IfxCpu_syncEvent event;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   695   * boolean errorVal;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   696   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   697   * // Below code should be repeated in Each core
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   698   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   699   * // Upon reaching Synchonisation point
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   700   * IfxCpu_emitEvent(&event);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   701   * errorVal = IfxCpu_waitEvent(&event, timeoutMilliSec); // timeoutMilliSec is timeout value to wait
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   702   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   703   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   704   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   705   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   706  IFX_EXTERN boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   707  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   708  /** \brief This function sets a bit corresponding to the core in the event.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   709   * \param event Synchronous Event
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   710   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   711   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   712   * A coding example can be found in \ref IfxCpu_waitEvent
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   713   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   714   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   715  IFX_EXTERN void IfxCpu_emitEvent(IfxCpu_syncEvent *event);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   716  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   717  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   719  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   720  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   721  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   723  /** \brief Sets all CPUs to Idle mode except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   724   * \param masterCpu Master CPU Index- All except this will be set to Idle Mode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   725   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   726   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   727  IFX_EXTERN void IfxCpu_setAllIdleExceptMasterCpu(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   728  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   729  /** \brief Disables interrupts for all CPUs except the Master CPU,index of which is given as the parameter
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   730   * \param masterCpu Master CPU Index- All except this will have their interrupts disabled
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   731   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   732   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   733  IFX_EXTERN void IfxCpu_disableInterruptsAllExceptMaster(IfxCpu_ResourceCpu masterCpu);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   734  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   735  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   736  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   737  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   738  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   739  IFX_INLINE boolean IfxCpu_areInterruptsEnabled(void)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   740  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   741      Ifx_CPU_ICR reg;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   742      reg.U = __mfcr(CPU_ICR);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   743      return reg.B.IE != 0;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   744  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   745  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   746  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   747  IFX_INLINE boolean IfxCpu_disableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   748  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   749      boolean enabled;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   750      enabled = IfxCpu_areInterruptsEnabled();
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   751      __disable();
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   752      __nop();
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   753      return enabled;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   754  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   755  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   756  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   757  IFX_INLINE void IfxCpu_enableInterrupts(void)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   758  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Cpu\Std\IfxCpu.h	   759      __enable();
	enable
.L19:

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    48  {
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    49      IfxCpu_enableInterrupts();
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    50      
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    51      /* !!WATCHDOG0 AND SAFETY WATCHDOG ARE DISABLED HERE!!
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    52       * Enable the watchdogs and service them periodically if it is required
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    53       */
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    54      IfxScuWdt_disableCpuWatchdog(IfxScuWdt_getCpuWatchdogPassword());
	call	IfxScuWdt_getCpuWatchdogPassword
	mov	d4,d2
	call	IfxScuWdt_disableCpuWatchdog
.L44:

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    55      IfxScuWdt_disableSafetyWatchdog(IfxScuWdt_getSafetyWatchdogPassword());
	call	IfxScuWdt_getSafetyWatchdogPassword
	mov	d4,d2
	call	IfxScuWdt_disableSafetyWatchdog
.L45:

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    56      
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    57      /* Wait for CPU sync event */
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    58      IfxCpu_emitEvent(&g_cpuSyncEvent);
	lea	a4,g_cpuSyncEvent
	call	IfxCpu_emitEvent
.L46:

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    59      IfxCpu_waitEvent(&g_cpuSyncEvent, 1);
	lea	a4,g_cpuSyncEvent
.L47:
	mov	d4,#1
	call	IfxCpu_waitEvent
.L48:

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    60      initUART();
	call	initUART
.L49:

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    61  
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    62      Debugger_printf("core0_main init\r\n");
	movh.a	a4,#@his(.2.str)
	lea	a4,[a4]@los(.2.str)
	call	Debugger_printf
.L22:

; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    11   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    12   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    13   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    14   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    15   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    16   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    17   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    18   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    19   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    20   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    21   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    22   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    23   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    24   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    25   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    26   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    27   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    28   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    29   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    30   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    31   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    32   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    33   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    34   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    35   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    36   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    37   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    38   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    39   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    40   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    41   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    42   * \ingroup IfxLld_Stm
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    43   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    44   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    45   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    46   * In the following sections it will be described, how to integrate the driver into the application framework.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    47   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    48   * \section IfxLld_Stm_Preparation Preparation
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    49   * \subsection IfxLld_Stm_Include Include Files
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    50   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    51   * Include following header file into your C code:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    52   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    53   * #include <Stm/Std/IfxStm.h>
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    54   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    55   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    56   * \subsection IfxLld_Stm_Variables Variables
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    57   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    58   * Declare STM variables :
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    59   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    60   * Ifx_STM *stmSfr;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    61   * IfxStm_CompareConfig stmConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    62   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    63   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    64   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    65   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    66   * See also \ref IfxLld_Cpu_Irq_Usage
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    67   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    68   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    69   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    70   * // priorities are normally defined in Ifx_IntPrioDef.h
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    71   * #define IFX_INTPRIO_STM0_SR0  10
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    72   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    73   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    74   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    75   * please take care in choosing number of ticks, the below example code will raise an interrupt
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    76   * evry time the specified number of ticks have been elapsed.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    77   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    78   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    79   * {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    80   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    81   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    82   * }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    83   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    84   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    85   * Finally install the interrupt handlers in your initialisation function:
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    86   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    87   *     // install interrupt handlers
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    88   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    89   *     IfxCpu_enableInterrupts();
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    90   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    91   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    92   * \subsection IfxLld_Stm_Init Module Initialisation
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    93   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    94   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    95   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    96   * The module initialisation can be done as followed.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    97   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    98   * \code
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	    99   *     stmSfr = &MODULE_STM0;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   100   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   101   *     IfxStm_initCompareConfig(&stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   102   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   103   *     // configure to generate interrupt every 10 us
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   104   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   105   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   106   *     stmConfig.ticks = ticks;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   107   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   108   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   110   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   111   *     IfxStm_initCompare(stmSfr, &stmConfig);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   112   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   113   * \endcode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   114   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   115   * Now the Stm shall generate interrupts regularly based on the configured time !
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   116   *
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   117   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   118   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   119   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   120   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   121   * \defgroup IfxLld_Stm_Std_Module Module Functions
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   122   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   123   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   124   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   125   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   126   * \ingroup IfxLld_Stm_Std
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   127   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   128  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   129  #ifndef IFXSTM_H
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   130  #define IFXSTM_H 1
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   131  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   132  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   133  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   134  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   135  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   136  #include "_Impl/IfxStm_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   137  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   138  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   139  #include "IfxCbs_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   140  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   141  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   142  /*-----------------------------------Macros-----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   144  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   145  #ifndef IFXSTM_DEFAULT_TIMER
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   146  #define IFXSTM_DEFAULT_TIMER (&MODULE_STM0)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   147  #endif
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   148  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   149  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   150  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   151  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   152  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   153  /** \addtogroup IfxLld_Stm_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   154   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   155  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   156   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   157  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   158  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   159      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   160      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   161  } IfxStm_Comparator;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   162  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   163  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   164   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   165  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   166  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   167      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   168      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   169  } IfxStm_ComparatorInterrupt;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   171  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   172   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   173  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   174  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   201      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   202      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   203      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   204      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   205      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   206      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   207  } IfxStm_ComparatorOffset;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   208  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   209  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   210   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   211  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   212  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   239      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   240      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   241      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   242      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   243      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   244      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   245  } IfxStm_ComparatorSize;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   246  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   247  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   248   * Definition in Ifx_STM.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   249   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   250  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   251  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   252      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   253      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   254  } IfxStm_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   255  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   256  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   257   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   258  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   259  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   260      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   261      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   262      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   263  } IfxStm_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   264  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   265  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   266  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   267  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   268  /*-----------------------------Data Structures--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   269  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   270  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   271  /** \addtogroup IfxLld_Stm_Std_Structures
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   272   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   273  /** \brief Comparator Configuration Structure
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   274   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   275  typedef struct
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   276  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   277      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   278      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   279      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   280      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   281      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   282      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   283      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   284  } IfxStm_CompareConfig;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   285  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   286  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   287  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   288  /** \addtogroup IfxLld_Stm_Std_Module
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   289   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   290  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   291  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   292  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   293  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   294  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns system timer value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   297   * \return system timer value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   298   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the system timer frequency.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   302   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   303   * \return the system timer frequency in Hz.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   304   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   305  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   306  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   307  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   308   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   309   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   310   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   311   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   312   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   313  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   314  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   315  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   316   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   317   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   318   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   319   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   320   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   321  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   322  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   323  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   324  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   325  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   327  /** \brief Disables the Stm module
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   330   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   332  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   333  /** \brief enable suspend by debugger.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   334   * Note: The API will write into the OCS register only if OCDS is enabled
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   335   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   336   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   337   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   338  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   339  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   340  /** \brief Returns the module index of the selected STM module
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   341   * \param stm Pointer to STM module registers
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   342   * \return STM module register address
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   343   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   344  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   345  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   346  /** \brief API to get the resource index of the STM specified.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   347   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   348   * \return system timer module index.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   349   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   350  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   351  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   352  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   353  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   354  /** \addtogroup IfxLld_Stm_Std_Timer
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   355   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   356  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   357  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   358  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   359  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   360  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   361  /** \brief Returns the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   362   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   363   * \return the lower system timer value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   364   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   365  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   366  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   367  /** \brief Gets the TIM3 couter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   368   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   369   * \return TIM3 counter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   370   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   371  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   372  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   373  /** \brief Gets the TIM4 couter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   374   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   375   * \return TIM4 counter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   376   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   377  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   378  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   379  /** \brief Gets the TIM5 couter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   380   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   381   * \return TIM5 counter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   382   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   383  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   384  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   385  /** \brief Gets the TIM6 couter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   386   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   387   * \return TIM6 counter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   389  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   390  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   391  /** \brief Gets the TIM1 couter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   392   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   393   * \return TIM1 counter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   394   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   395  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   396  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   397  /** \brief Gets the TIM2 couter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   398   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   399   * \return TIM2 counter value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   400   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   402  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Returns the timer value shifted right by offset.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   404   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   405   * \param offset offset value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   406   * \return the lower system timer value shifted by offset.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   407   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   408  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   410  /** \brief Wait for requested time.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   411   * The macro waits in while loop for the specified time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   412   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   413   * \param ticks ticks Wait time in system timer ticks.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   414   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   415   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   416  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   417  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   418  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   419  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   420  /** \addtogroup IfxLld_Stm_Std_Comparator
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   421   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   422  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   423  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   424  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   425  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   426  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the updated compare register value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   429   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   430   * \return The compare value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   431   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   433  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   436   * \param microSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   438   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   440  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   443   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   444   * \return ticks
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   445   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   446  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   447  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   448  /** \brief Update the compare register value increased with given ticks.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   449   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   450   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   451   * \param ticks count for next comparison from current timer count.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   452   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   453   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   454  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   455  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   456  /** \brief Update the compare register value.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   457   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   458   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   459   * \param ticks count for next comparison.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   460   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   461   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   462  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   463  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   464  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   465  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   466  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Clear the compare interrupt flag.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   472   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   474  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Disables the compare interrupt
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   479   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   481  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   482  /** \brief Enables the compare interrupt .
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   485   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   486   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   488  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   489  /** \brief get the interrupt source pointer for the comparator.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to the STM registers
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   491   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   492   * \return pointer to the interrupt source
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   493   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   495  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise stm compare register.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   497   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   498   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   499   * \return TRUE if Comparator successful otherwise FLASE.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   500   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   501  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   502  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   503  /** \brief Initialise compare configuration with default values.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   504   * \param config pointer to configuration structure.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   505   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   506   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   508  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Indicates if the compare interrupt flag is set.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   512   * \return TRUE if the comparator flag is set
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   514  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   516  /** \brief Set the compare behavior
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   517   * \param stm pointer to System timer module registers
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   518   * \param comparator comparator selection comparator
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   519   * \param offset Comparator start bit position
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   520   * \param size Size of compare value to compare with timer
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   521   * \param interrupt Comparator Interrupt request source defined
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   522   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   523   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   524  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   525  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   526  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   528  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   529  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   530  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   531  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   532  /**
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   533   * \param stm pointer STM registers
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   534   * \param mode mode selection (enable/ disable)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   535   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   536   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   537  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   538  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   539  /** \brief Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   540   * \return Returns the STM counter value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   541   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   542  IFX_INLINE sint64 IfxStm_now(void);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   543  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   544  /** \brief Get the deadline value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   545   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   546   * \return Return the deadline
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   547   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   548  IFX_INLINE sint64 IfxStm_getDeadLine(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   549  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   550  /** \brief Checked if deadline has occured
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   551   * \param deadLine Deadline value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   552   * \return Return if deadline occured or not
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   553   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   554  IFX_INLINE boolean IfxStm_isDeadLine(sint64 deadLine);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   555  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   556  /** \brief Waits for a specific time
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   557   * \param timeout timeout value
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   558   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   559   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   560  IFX_INLINE void IfxStm_wait(sint64 timeout);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   561  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   562  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   563  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   564  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   565  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   566  /**
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   567   * \param stm pointer to STM registers
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   568   * \return None
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   569   */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   570  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   571  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   572  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   573  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   574  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   576  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   577  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   578      uint64 result;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   579  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   580      result  = stm->TIM0.U;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   581      result |= ((uint64)stm->CAP.U) << 32;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   582  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   583      return result;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   584  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   585  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   586  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   587  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   588  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   589      return stm->CMP[comparator].B.CMPVAL;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   590  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   591  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   592  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   593  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   594  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   595      IFX_UNUSED_PARAMETER(stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   596      float32 result;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   597  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   598      result = IfxScuCcu_getStmFrequency();
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   600      return result;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   601  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   602  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   603  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   604  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   605  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   606      return stm->TIM0.U;
	lea	a15,0xf0001010
	ld.w	d0,[a15]
.L30:

; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   607  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   608  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   609  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   610  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   611  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   612      return stm->TIM3.U;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   613  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   614  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   615  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   616  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   617  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   618      return stm->TIM4.U;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   619  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   620  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   621  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   622  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   623  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   624      return stm->TIM5.U;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   625  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   626  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   627  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   628  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   629  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   630      return stm->TIM6.U;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   631  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   633  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   634  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   635  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   636      return stm->TIM1.U;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   637  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   638  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   640  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   641  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   642      return stm->TIM2.U;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   643  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   644  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   645  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   646  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   647  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   648      uint64 now;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   649  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   650      now = IfxStm_get(stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   651  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   652      return (uint32)(now >> offset);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   653  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   654  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   655  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   656  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   657  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   658      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   659      return (freq / (1000000)) * microSeconds;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   660  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   661  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   662  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   663  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   664  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   665      sint32 freq = (sint32)IfxStm_getFrequency(stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   666      return (freq / (1000)) * milliSeconds;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   667  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   668  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   669  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   670  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   671  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   672      stm->CMP[comparator].B.CMPVAL = stm->CMP[comparator].B.CMPVAL + ticks;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   673  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   674  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   675  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   676  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   677  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   678      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   680      // read the status
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   681      ocs.U = stm->OCS.U;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   682  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   683      // return the status
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   684      return ocs.B.SUSSTA;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   685  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   687  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   688  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   689  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   690      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   691      IfxScuWdt_clearCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   692      stm->CLC.B.EDIS = mode;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   693      IfxScuWdt_setCpuEndinit(passwd);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   694  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   695  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   696  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   697  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   698  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   699      Ifx_STM_OCS ocs;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   700  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   701      /* Only if OCDS is enabled write into the OCS register */
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   702      if (MODULE_CBS.OSTATE.B.OEN == 1U)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   703      {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   704          // remove protection and configure the suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   705          ocs.B.SUS_P      = 1;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   706          ocs.B.SUS        = mode;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   707          stm->OCS.U       = ocs.U;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   708          stm->OCS.B.SUS_P = 0;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   709      }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   710  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   711  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   713  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   714  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   715      stm->CMP[comparator].B.CMPVAL = ticks;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   716  }
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   717  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   718  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   719  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks)
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   720  {
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   721      uint32 beginTime;
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   722  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   723      beginTime = IfxStm_getLower(stm);
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   724  
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   725      /*below code will work because of unsigned 32 bit calculation even at timer wrapping condition
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   726       * As an example if beginTime = 0xFFFFFFFE and current time = 2 (after overflow), unsigned calculation
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   727       * 2 - 0xFFFFFFFE will be 4*/
; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   728      while ((IfxStm_getLower(stm) - beginTime) < ticks)
	ld.w	d1,.3.cnt

; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   728      while ((IfxStm_getLower(stm) - beginTime) < ticks)      (inlined)
.L2:
	ld.w	d15,[a15]
.L34:
	sub	d15,d0
.L50:

; D:\WorkSpace\Tasking\Tasking_TC375_SMU_Reset_Alarm\0_Src\4_McHal\Tricore\Stm\Std\IfxStm.h	   728      while ((IfxStm_getLower(stm) - beginTime) < ticks)      (inlined)
	jlt.u	d15,d1,.L2
.L23:

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    63      //wait 20ms
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    64      IfxStm_waitTicks(&MODULE_STM0, 2000000);
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    65      config_SMU_reset();     /* Configure the SMU            */
	call	config_SMU_reset
.L51:

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    66      trigger_SMU_reset();    /* Trigger the Software Alarm 0 */
	call	trigger_SMU_reset

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    67      
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    68      while(1)
.L3:
	j	.L3
.L17:
	
__core0_main_function_end:
	.size	core0_main,__core0_main_function_end-core0_main
.L14:
	; End of function
	
	.sdecl	'.zdata.Cpu0_Main.g_cpuSyncEvent',data,cluster('g_cpuSyncEvent')
	.sect	'.zdata.Cpu0_Main.g_cpuSyncEvent'
	.global	g_cpuSyncEvent
	.align	4
g_cpuSyncEvent:	.type	object
	.size	g_cpuSyncEvent,4
	.space	4
	.sdecl	'.rodata.Cpu0_Main..2.str',data,rom
	.sect	'.rodata.Cpu0_Main..2.str'
.2.str:	.type	object
	.size	.2.str,18
	.byte	99,111,114,101
	.byte	48,95,109,97
	.byte	105,110,32,105
	.byte	110,105,116,13
	.byte	10
	.space	1
	.calls	'core0_main','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'core0_main','IfxScuWdt_disableCpuWatchdog'
	.calls	'core0_main','IfxScuWdt_getSafetyWatchdogPassword'
	.calls	'core0_main','IfxScuWdt_disableSafetyWatchdog'
	.calls	'core0_main','IfxCpu_emitEvent'
	.calls	'core0_main','IfxCpu_waitEvent'
	.calls	'core0_main','initUART'
	.calls	'core0_main','Debugger_printf'
	.calls	'core0_main','config_SMU_reset'
	.calls	'core0_main','trigger_SMU_reset'
	.extern	IfxScuWdt_disableCpuWatchdog
	.extern	IfxScuWdt_disableSafetyWatchdog
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuWdt_getSafetyWatchdogPassword
	.extern	IfxCpu_waitEvent
	.extern	IfxCpu_emitEvent
	.extern	config_SMU_reset
	.extern	trigger_SMU_reset
	.extern	initUART
	.extern	Debugger_printf
	.calls	'core0_main','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L7:
	.word	111250
	.half	3
	.word	.L8
	.byte	4
.L6:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Cpu0_Main.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\Debug\\',0,12,1
	.word	.L9
	.byte	2,1,1,3
	.word	161
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	164
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	209
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	221
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	333
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	307
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	339
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	339
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	307
	.byte	6,0
.L35:
	.byte	7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,208,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	448
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	448
	.byte	16,0,2,35,0,0,12,4,135,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	464
	.byte	4,2,35,0,0,7
	.byte	'unsigned char',0,1,8,7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,217,9,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	600
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,4,143,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	639
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,233,9,16,4,11
	.byte	'AE',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	600
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,4,151,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	905
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,210,16,25,12,13
	.byte	'CON0',0
	.word	560
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	865
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1096
	.byte	4,2,35,8,0,14
	.word	1136
	.byte	3
	.word	1199
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,164,4,17,1,1,5
	.byte	'watchdog',0,3,164,4,65
	.word	1204
	.byte	5
	.byte	'password',0,3,164,4,82
	.word	617
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,3,197,4,17,1,1,5
	.byte	'password',0,3,197,4,59
	.word	617
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,144,5,17,1,1,5
	.byte	'watchdog',0,3,144,5,63
	.word	1204
	.byte	5
	.byte	'password',0,3,144,5,80
	.word	617
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,3,177,5,17,1,1,5
	.byte	'password',0,3,177,5,57
	.word	617
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,220,4,19
	.word	617
	.byte	1,1,5
	.byte	'watchdog',0,3,220,4,74
	.word	1204
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,3,129,5,19
	.word	617
	.byte	1,1,6,0,10
	.byte	'_Ifx_P_OUT_Bits',0,6,145,3,16,4,11
	.byte	'P0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,6,171,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1614
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,6,171,2,16,4,11
	.byte	'PS0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	600
	.byte	1,0,2,35,3,0,12,6,251,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1930
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,6,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	600
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	600
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,6,155,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2501
	.byte	4,2,35,0,0,15,4
	.word	600
	.byte	16,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,6,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	600
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	600
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	600
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	600
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	600
	.byte	5,0,2,35,3,0,12,6,171,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2630
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,6,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	600
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	600
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	600
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	600
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	600
	.byte	5,0,2,35,3,0,12,6,187,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2845
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,6,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	600
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	600
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	600
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	600
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	600
	.byte	5,0,2,35,3,0,12,6,195,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3060
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,6,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	600
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	600
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	600
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	600
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	600
	.byte	5,0,2,35,3,0,12,6,179,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3277
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,6,141,1,16,4,11
	.byte	'P0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,6,163,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3497
	.byte	4,2,35,0,0,15,24
	.word	600
	.byte	16,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,6,212,3,16,4,11
	.byte	'PD0',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	600
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	600
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	600
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	600
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	600
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	600
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	600
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	600
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	600
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	600
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	600
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	600
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	600
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	600
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	600
	.byte	2,0,2,35,3,0,12,6,195,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3821
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,6,233,3,16,4,11
	.byte	'PD8',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	600
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	600
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	600
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	600
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	600
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	600
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	600
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	600
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	600
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	600
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	600
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	600
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	600
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	600
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	600
	.byte	2,0,2,35,3,0,12,6,203,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4125
	.byte	4,2,35,0,0,15,8
	.word	600
	.byte	16,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,6,111,16,4,11
	.byte	'EN0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,6,147,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4450
	.byte	4,2,35,0,0,15,12
	.word	600
	.byte	16,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,6,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,6,187,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4790
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,6,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	600
	.byte	1,0,2,35,3,0,12,6,179,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5156
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,6,230,2,16,4,11
	.byte	'PS0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	425
	.byte	28,0,2,35,0,0,12,6,139,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5520
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,6,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	425
	.byte	24,0,2,35,0,0,12,6,155,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5667
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,6,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	425
	.byte	20,0,2,35,0,0,12,6,163,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5836
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,6,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	617
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,6,147,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6008
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,6,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	617
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	617
	.byte	12,0,2,35,2,0,12,6,219,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6183
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,6,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	8,0,2,35,3,0,12,6,235,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6357
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,6,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	600
	.byte	4,0,2,35,3,0,12,6,243,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6531
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,6,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	600
	.byte	1,0,2,35,3,0,12,6,227,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6707
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,6,208,2,16,4,11
	.byte	'PS0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,6,131,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6863
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,6,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	617
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	600
	.byte	1,0,2,35,3,0,12,6,211,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7196
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,6,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	600
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	600
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,6,203,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7544
	.byte	4,2,35,0,0,15,32
	.word	7824
	.byte	16,7,0,15,56
	.word	600
	.byte	16,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,105,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,6,139,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7882
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,68,16,4,11
	.byte	'EN0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	600
	.byte	1,0,2,35,3,0,12,6,131,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7969
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,6,220,5,25,128,2,13
	.byte	'OUT',0
	.word	1890
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2461
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2581
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2621
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	2805
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3020
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3237
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3457
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2621
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3772
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	3812
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4085
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4401
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4441
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4741
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4781
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5116
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5480
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4441
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5627
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5796
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	5968
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6143
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6317
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6491
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6667
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6823
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7156
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7504
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4441
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	7864
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	7873
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	7929
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8496
	.byte	4,3,35,252,1,0,14
	.word	8536
	.byte	3
	.word	9106
	.byte	17,5,187,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,169,5,17,1,1,5
	.byte	'port',0,5,169,5,44
	.word	9111
	.byte	5
	.byte	'pinIndex',0,5,169,5,56
	.word	600
	.byte	5
	.byte	'action',0,5,169,5,80
	.word	9116
	.byte	6,0,4
	.byte	'IfxScuCcu_wait',0,3,7,205,13,17,1,1,5
	.byte	'timeSec',0,7,205,13,40
	.word	221
	.byte	19,6,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,7,128,13,20
	.word	221
	.byte	1,1,6,0,17,9,155,1,9,1,18
	.byte	'IfxCpu_ResourceCpu_0',0,0,18
	.byte	'IfxCpu_ResourceCpu_1',0,1,18
	.byte	'IfxCpu_ResourceCpu_2',0,2,18
	.byte	'IfxCpu_ResourceCpu_none',0,3,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,8,229,6,31
	.word	9381
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,8,227,5,20
	.word	600
	.byte	1,1,6,0,8
	.byte	'IfxCpu_disableInterrupts',0,3,8,235,5,20
	.word	600
	.byte	1,1,19,6,0,0
.L18:
	.byte	4
	.byte	'IfxCpu_enableInterrupts',0,3,8,245,5,17,1,1
.L20:
	.byte	6,0,4
	.byte	'IfxCpu_restoreInterrupts',0,3,8,128,8,17,1,1,5
	.byte	'enabled',0,8,128,8,50
	.word	600
	.byte	6,0,7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,8,249,6,19
	.word	9686
	.byte	1,1,5
	.byte	'address',0,8,249,6,55
	.word	617
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,8,150,7,20
	.word	600
	.byte	1,1,5
	.byte	'address',0,8,150,7,70
	.word	617
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,8,132,9,17,1,1,5
	.byte	'address',0,8,132,9,56
	.word	9686
	.byte	5
	.byte	'count',0,8,132,9,72
	.word	9686
	.byte	19,6,0,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,11,68,16,4,11
	.byte	'SRPN',0,1
	.word	600
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	600
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	600
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	600
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	600
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	600
	.byte	1,0,2,35,3,0,12,11,93,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9917
	.byte	4,2,35,0,0,14
	.word	10207
	.byte	3
	.word	10246
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,10,247,1,17,1,1,5
	.byte	'src',0,10,247,1,60
	.word	10251
	.byte	6,0,10
	.byte	'_Ifx_STM_CLC_Bits',0,13,123,16,4,11
	.byte	'DISR',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	425
	.byte	28,0,2,35,0,0,12,13,173,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10299
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ID_Bits',0,13,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	600
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	600
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	617
	.byte	16,0,2,35,2,0,12,13,205,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10455
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0_Bits',0,13,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,253,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10574
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM1_Bits',0,13,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,141,3,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10660
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM2_Bits',0,13,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,149,3,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10746
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM3_Bits',0,13,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,157,3,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10832
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM4_Bits',0,13,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,165,3,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10919
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM5_Bits',0,13,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,173,3,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11006
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM6_Bits',0,13,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,181,3,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11093
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAP_Bits',0,13,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,157,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11180
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CMP_Bits',0,13,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,189,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11268
	.byte	4,2,35,0,0,15,8
	.word	11311
	.byte	16,1,0,10
	.byte	'_Ifx_STM_CMCON_Bits',0,13,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	600
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	600
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	600
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	600
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	600
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	600
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	600
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	600
	.byte	3,0,2,35,3,0,12,13,181,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11360
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ICR_Bits',0,13,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	425
	.byte	25,0,2,35,0,0,12,13,197,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11592
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ISCR_Bits',0,13,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	425
	.byte	28,0,2,35,0,0,12,13,213,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11809
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,13,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,133,3,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11973
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAPSV_Bits',0,13,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,165,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12061
	.byte	4,2,35,0,0,15,144,1
	.word	600
	.byte	16,143,1,0,10
	.byte	'_Ifx_STM_OCS_Bits',0,13,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	425
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	600
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	600
	.byte	2,0,2,35,3,0,12,13,245,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12162
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,13,198,1,16,4,11
	.byte	'CLR',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	425
	.byte	31,0,2,35,0,0,12,13,237,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12344
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST1_Bits',0,13,191,1,16,4,11
	.byte	'RST',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	425
	.byte	31,0,2,35,0,0,12,13,229,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12450
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST0_Bits',0,13,183,1,16,4,11
	.byte	'RST',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	425
	.byte	30,0,2,35,0,0,12,13,221,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12554
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,13,105,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	32,0,2,35,0,0,12,13,149,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12677
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,13,68,16,4,11
	.byte	'EN0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	600
	.byte	1,0,2,35,3,0,12,13,141,2,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12766
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM',0,13,198,3,25,128,2,13
	.byte	'CLC',0
	.word	10415
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2621
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10534
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2621
	.byte	4,2,35,12,13
	.byte	'TIM0',0
	.word	10620
	.byte	4,2,35,16,13
	.byte	'TIM1',0
	.word	10706
	.byte	4,2,35,20,13
	.byte	'TIM2',0
	.word	10792
	.byte	4,2,35,24,13
	.byte	'TIM3',0
	.word	10879
	.byte	4,2,35,28,13
	.byte	'TIM4',0
	.word	10966
	.byte	4,2,35,32,13
	.byte	'TIM5',0
	.word	11053
	.byte	4,2,35,36,13
	.byte	'TIM6',0
	.word	11140
	.byte	4,2,35,40,13
	.byte	'CAP',0
	.word	11228
	.byte	4,2,35,44,13
	.byte	'CMP',0
	.word	11351
	.byte	8,2,35,48,13
	.byte	'CMCON',0
	.word	11552
	.byte	4,2,35,56,13
	.byte	'ICR',0
	.word	11769
	.byte	4,2,35,60,13
	.byte	'ISCR',0
	.word	11933
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	4781
	.byte	12,2,35,68,13
	.byte	'TIM0SV',0
	.word	12021
	.byte	4,2,35,80,13
	.byte	'CAPSV',0
	.word	12111
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	12151
	.byte	144,1,2,35,88,13
	.byte	'OCS',0
	.word	12304
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	12410
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	12514
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	12637
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	12726
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	13295
	.byte	4,3,35,252,1,0,14
	.word	13335
	.byte	3
	.word	13755
	.byte	8
	.byte	'IfxStm_get',0,3,12,192,4,19
	.word	307
	.byte	1,1,5
	.byte	'stm',0,12,192,4,39
	.word	13760
	.byte	6,0,8
	.byte	'IfxStm_getFrequency',0,3,12,209,4,20
	.word	221
	.byte	1,1,5
	.byte	'stm',0,12,209,4,49
	.word	13760
	.byte	19,6,6,0,0
.L29:
	.byte	8
	.byte	'IfxStm_getLower',0,3,12,220,4,19
	.word	9686
	.byte	1,1
.L31:
	.byte	5
	.byte	'stm',0,12,220,4,44
	.word	13760
.L33:
	.byte	6,0
.L21:
	.byte	4
	.byte	'IfxStm_waitTicks',0,3,12,207,5,17,1,1
.L24:
	.byte	5
	.byte	'stm',0,12,207,5,43
	.word	13760
.L26:
	.byte	5
	.byte	'ticks',0,12,207,5,55
	.word	9686
.L28:
	.byte	19,6,6,0,0,7
	.byte	'long long int',0,8,5,8
	.byte	'IfxStm_now',0,3,12,221,5,19
	.word	13954
	.byte	1,1,19,6,6,6,0,0,8
	.byte	'IfxStm_getDeadLine',0,3,12,234,5,19
	.word	13954
	.byte	1,1,5
	.byte	'timeout',0,12,234,5,45
	.word	13954
	.byte	19,6,0,0,8
	.byte	'IfxStm_isDeadLine',0,3,12,251,5,20
	.word	600
	.byte	1,1,5
	.byte	'deadLine',0,12,251,5,45
	.word	13954
	.byte	19,6,0,0,20
	.word	441
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	14104
	.byte	0,14
	.word	425
	.byte	3
	.word	425
	.byte	23
	.byte	'__cmpswapw',0
	.word	14146
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	14151
	.byte	24
	.byte	'value',0
	.word	425
	.byte	24
	.byte	'compare',0
	.word	425
	.byte	0,25
	.byte	'__enable',0,1,1,1,1,26
	.word	169
	.byte	27
	.word	195
	.byte	6,0,26
	.word	230
	.byte	27
	.word	262
	.byte	6,0,26
	.word	275
	.byte	6,0,26
	.word	344
	.byte	27
	.word	363
	.byte	6,0,26
	.word	379
	.byte	27
	.word	394
	.byte	27
	.word	408
	.byte	6,0,26
	.word	1209
	.byte	27
	.word	1249
	.byte	27
	.word	1267
	.byte	6,0,26
	.word	1287
	.byte	27
	.word	1330
	.byte	6,0,26
	.word	1350
	.byte	27
	.word	1388
	.byte	27
	.word	1406
	.byte	6,0,26
	.word	1426
	.byte	27
	.word	1467
	.byte	6,0,26
	.word	1487
	.byte	27
	.word	1538
	.byte	6,0,26
	.word	1558
	.byte	6,0,28
	.byte	'IfxScuWdt_disableCpuWatchdog',0,3,176,3,17,1,1,1,1,5
	.byte	'password',0,3,176,3,53
	.word	617
	.byte	0,28
	.byte	'IfxScuWdt_disableSafetyWatchdog',0,3,186,3,17,1,1,1,1,5
	.byte	'password',0,3,186,3,56
	.word	617
	.byte	0,29
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,3,215,3,19
	.word	617
	.byte	1,1,1,1,29
	.byte	'IfxScuWdt_getSafetyWatchdogPassword',0,3,249,3,19
	.word	617
	.byte	1,1,1,1,26
	.word	9219
	.byte	27
	.word	9247
	.byte	27
	.word	9261
	.byte	27
	.word	9279
	.byte	6,0,26
	.word	9297
	.byte	27
	.word	9320
	.byte	19,30
	.word	9341
	.byte	31
	.word	9379
	.byte	0,6,0,0,26
	.word	9341
	.byte	6,0,26
	.word	9483
	.byte	6,0,26
	.word	9517
	.byte	6,0,26
	.word	9559
	.byte	19,30
	.word	9517
	.byte	31
	.word	9557
	.byte	0,6,0,0,26
	.word	9600
	.byte	6,0,26
	.word	9634
	.byte	27
	.word	9667
	.byte	6,0,26
	.word	9707
	.byte	27
	.word	9748
	.byte	6,0,26
	.word	9767
	.byte	27
	.word	9822
	.byte	6,0,26
	.word	9841
	.byte	27
	.word	9881
	.byte	27
	.word	9898
	.byte	19,6,0,0,3
	.word	425
	.byte	32
	.byte	'IfxCpu_waitEvent',0,8,194,5,20
	.word	600
	.byte	1,1,1,1,5
	.byte	'event',0,8,194,5,55
	.word	14721
	.byte	5
	.byte	'timeoutMilliSec',0,8,194,5,69
	.word	9686
	.byte	0,28
	.byte	'IfxCpu_emitEvent',0,8,203,5,17,1,1,1,1,5
	.byte	'event',0,8,203,5,52
	.word	14721
	.byte	0,26
	.word	10256
	.byte	27
	.word	10284
	.byte	6,0,26
	.word	13765
	.byte	27
	.word	13788
	.byte	6,0,26
	.word	13803
	.byte	27
	.word	13835
	.byte	19,19,30
	.word	9341
	.byte	31
	.word	9379
	.byte	0,0,6,0,0,26
	.word	13853
	.byte	27
	.word	13881
	.byte	6,0,26
	.word	13896
	.byte	27
	.word	13921
	.byte	27
	.word	13934
	.byte	19,30
	.word	13853
	.byte	27
	.word	13881
	.byte	31
	.word	13894
	.byte	0,6,30
	.word	13853
	.byte	27
	.word	13881
	.byte	31
	.word	13894
	.byte	0,6,0,0,26
	.word	13971
	.byte	19,30
	.word	9634
	.byte	27
	.word	9667
	.byte	31
	.word	9684
	.byte	0,6,30
	.word	9559
	.byte	33
	.word	9596
	.byte	30
	.word	9517
	.byte	31
	.word	9557
	.byte	0,31
	.word	9597
	.byte	0,0,6,30
	.word	13765
	.byte	27
	.word	13788
	.byte	31
	.word	13801
	.byte	0,6,0,0,26
	.word	14000
	.byte	27
	.word	14031
	.byte	19,30
	.word	13971
	.byte	33
	.word	13994
	.byte	30
	.word	9634
	.byte	27
	.word	9667
	.byte	31
	.word	9684
	.byte	0,31
	.word	13995
	.byte	30
	.word	9559
	.byte	33
	.word	9596
	.byte	30
	.word	9517
	.byte	31
	.word	9557
	.byte	0,31
	.word	9597
	.byte	0,0,31
	.word	13996
	.byte	30
	.word	13765
	.byte	27
	.word	13788
	.byte	31
	.word	13801
	.byte	0,31
	.word	13997
	.byte	0,0,6,0,0,26
	.word	14052
	.byte	27
	.word	14082
	.byte	19,30
	.word	13971
	.byte	33
	.word	13994
	.byte	30
	.word	9634
	.byte	27
	.word	9667
	.byte	31
	.word	9684
	.byte	0,31
	.word	13995
	.byte	30
	.word	9559
	.byte	33
	.word	9596
	.byte	30
	.word	9517
	.byte	31
	.word	9557
	.byte	0,31
	.word	9597
	.byte	0,0,31
	.word	13996
	.byte	30
	.word	13765
	.byte	27
	.word	13788
	.byte	31
	.word	13801
	.byte	0,31
	.word	13997
	.byte	0,0,6,0,0,34
	.byte	'config_SMU_reset',0,14,34,6,1,1,1,1,34
	.byte	'trigger_SMU_reset',0,14,35,6,1,1,1,1,34
	.byte	'initUART',0,15,54,6,1,1,1,1,7
	.byte	'char',0,1,6,20
	.word	15295
	.byte	3
	.word	15303
	.byte	28
	.byte	'Debugger_printf',0,15,56,6,1,1,1,1,5
	.byte	'fmt',0,15,56,34
	.word	15308
	.byte	35,15,56,39,0,7
	.byte	'short int',0,2,5,36
	.byte	'__wchar_t',0,16,1,1
	.word	15354
	.byte	36
	.byte	'__size_t',0,16,1,1
	.word	425
	.byte	36
	.byte	'__ptrdiff_t',0,16,1,1
	.word	441
	.byte	37,1,3
	.word	15422
	.byte	36
	.byte	'__codeptr',0,16,1,1
	.word	15424
	.byte	36
	.byte	'boolean',0,17,104,29
	.word	600
	.byte	36
	.byte	'uint8',0,17,108,29
	.word	600
	.byte	36
	.byte	'uint16',0,17,112,29
	.word	617
	.byte	36
	.byte	'uint32',0,17,116,29
	.word	9686
	.byte	36
	.byte	'uint64',0,17,121,29
	.word	307
	.byte	36
	.byte	'sint16',0,17,129,1,29
	.word	15354
	.byte	7
	.byte	'long int',0,4,5,36
	.byte	'sint32',0,17,134,1,29
	.word	15538
	.byte	36
	.byte	'sint64',0,17,141,1,29
	.word	13954
	.byte	36
	.byte	'float32',0,17,170,1,29
	.word	221
	.byte	36
	.byte	'pvoid',0,18,54,28
	.word	339
	.byte	36
	.byte	'Ifx_TickTime',0,18,76,28
	.word	13954
	.byte	36
	.byte	'Ifx_Priority',0,18,100,16
	.word	617
	.byte	17,18,127,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,36
	.byte	'Ifx_RxSel',0,18,137,1,3
	.word	15655
	.byte	36
	.byte	'Ifx_UReg_8Bit',0,19,96,24
	.word	600
	.byte	36
	.byte	'Ifx_UReg_32Bit',0,19,98,24
	.word	425
	.byte	36
	.byte	'Ifx_SReg_32Bit',0,19,101,24
	.word	441
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,20,68,16,4,11
	.byte	'ADDR',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_A_Bits',0,20,71,3
	.word	15860
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,20,74,16,4,11
	.byte	'VSS',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	448
	.byte	31,0,2,35,0,0,36
	.byte	'Ifx_CPU_BIV_Bits',0,20,78,3
	.word	15921
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,20,81,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	448
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	448
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,20,87,3
	.word	16000
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,20,90,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	448
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,20,95,3
	.word	16138
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,20,98,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	448
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	448
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	448
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,20,106,3
	.word	16259
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,20,109,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	448
	.byte	31,0,2,35,0,0,36
	.byte	'Ifx_CPU_BTV_Bits',0,20,113,3
	.word	16435
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,20,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	448
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_CCNT_Bits',0,20,120,3
	.word	16521
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,20,123,16,4,11
	.byte	'CM',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	448
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	448
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	448
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	448
	.byte	21,0,2,35,0,0,36
	.byte	'Ifx_CPU_CCTRL_Bits',0,20,131,1,3
	.word	16610
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,20,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	448
	.byte	27,0,2,35,0,0,36
	.byte	'Ifx_CPU_COMPAT_Bits',0,20,140,1,3
	.word	16757
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,20,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	448
	.byte	29,0,2,35,0,0,36
	.byte	'Ifx_CPU_CORE_ID_Bits',0,20,147,1,3
	.word	16886
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,20,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	448
	.byte	27,0,2,35,0,0,36
	.byte	'Ifx_CPU_CPR_L_Bits',0,20,154,1,3
	.word	16986
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,20,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	448
	.byte	27,0,2,35,0,0,36
	.byte	'Ifx_CPU_CPR_U_Bits',0,20,161,1,3
	.word	17081
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,20,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	448
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	448
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CPU_CPU_ID_Bits',0,20,169,1,3
	.word	17176
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,20,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	448
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	448
	.byte	22,0,2,35,0,0,36
	.byte	'Ifx_CPU_CPXE_Bits',0,20,176,1,3
	.word	17286
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,20,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	448
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_CPU_CREVT_Bits',0,20,187,1,3
	.word	17378
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,20,190,1,16,4,11
	.byte	'CID',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	448
	.byte	29,0,2,35,0,0,36
	.byte	'Ifx_CPU_CUS_ID_Bits',0,20,194,1,3
	.word	17532
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,20,197,1,16,4,11
	.byte	'DATA',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_D_Bits',0,20,200,1,3
	.word	17626
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,20,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	448
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	448
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CPU_DATR_Bits',0,20,214,1,3
	.word	17689
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,20,217,1,16,4,11
	.byte	'DE',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	448
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	448
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	448
	.byte	19,0,2,35,0,0,36
	.byte	'Ifx_CPU_DBGSR_Bits',0,20,228,1,3
	.word	17915
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,20,231,1,16,4,11
	.byte	'DTA',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	448
	.byte	31,0,2,35,0,0,36
	.byte	'Ifx_CPU_DBGTCR_Bits',0,20,235,1,3
	.word	18130
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,20,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	448
	.byte	30,0,2,35,0,0,36
	.byte	'Ifx_CPU_DCON0_Bits',0,20,243,1,3
	.word	18224
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,20,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	448
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CPU_DCON2_Bits',0,20,250,1,3
	.word	18340
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,20,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	448
	.byte	26,0,2,35,0,0,36
	.byte	'Ifx_CPU_DCX_Bits',0,20,129,2,3
	.word	18441
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,20,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_DEADD_Bits',0,20,135,2,3
	.word	18534
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,20,138,2,16,4,11
	.byte	'TA',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_DIEAR_Bits',0,20,141,2,3
	.word	18614
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,20,144,2,16,4,11
	.byte	'IED',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	448
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	448
	.byte	15,0,2,35,0,0,36
	.byte	'Ifx_CPU_DIETR_Bits',0,20,159,2,3
	.word	18683
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,20,162,2,16,4,11
	.byte	'EN0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,20,196,2,3
	.word	18967
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,20,199,2,16,4,11
	.byte	'EN0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,20,233,2,3
	.word	19558
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,20,236,2,16,4,11
	.byte	'EN32',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,20,142,3,3
	.word	20149
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,20,145,3,16,4,11
	.byte	'EN32',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,20,179,3,3
	.word	20750
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,20,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	448
	.byte	27,0,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,20,186,3,3
	.word	21351
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,20,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	448
	.byte	27,0,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,20,193,3,3
	.word	21466
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,20,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	448
	.byte	31,0,2,35,0,0,36
	.byte	'Ifx_CPU_DMS_Bits',0,20,200,3,3
	.word	21581
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,20,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	448
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	448
	.byte	14,0,2,35,0,0,36
	.byte	'Ifx_CPU_DPRE_Bits',0,20,207,3,3
	.word	21674
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,20,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	448
	.byte	29,0,2,35,0,0,36
	.byte	'Ifx_CPU_DPR_L_Bits',0,20,214,3,3
	.word	21766
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,20,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	448
	.byte	29,0,2,35,0,0,36
	.byte	'Ifx_CPU_DPR_U_Bits',0,20,221,3,3
	.word	21861
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,20,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	448
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	448
	.byte	14,0,2,35,0,0,36
	.byte	'Ifx_CPU_DPWE_Bits',0,20,228,3,3
	.word	21956
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,20,231,3,16,4,11
	.byte	'SRE',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	448
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	448
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	448
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	7,0,2,35,0,0,36
	.byte	'Ifx_CPU_DSTR_Bits',0,20,250,3,3
	.word	22048
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,20,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	448
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_CPU_EXEVT_Bits',0,20,133,4,3
	.word	22387
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,20,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	448
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	12,0,2,35,0,0,36
	.byte	'Ifx_CPU_FCX_Bits',0,20,141,4,3
	.word	22541
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,20,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	448
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	448
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	448
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	448
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	448
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	448
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	448
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	448
	.byte	2,0,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,20,154,4,3
	.word	22647
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,20,157,4,16,4,11
	.byte	'STALL',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	448
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	448
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	448
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	448
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	448
	.byte	6,0,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,20,165,4,3
	.word	22865
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,20,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	448
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	448
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	448
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	448
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	448
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	448
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	448
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	448
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	448
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	448
	.byte	2,0,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,20,182,4,3
	.word	23056
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,20,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	448
	.byte	22,0,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,20,198,4,3
	.word	23356
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,20,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	448
	.byte	31,0,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,20,205,4,3
	.word	23661
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,20,208,4,16,4,11
	.byte	'TST',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	448
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	448
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	448
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	448
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,20,227,4,3
	.word	23762
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,230,4,16,4,11
	.byte	'OPC',0,4
	.word	448
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	448
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	12,0,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,237,4,3
	.word	24111
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,20,240,4,16,4,11
	.byte	'PC',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,20,243,4,3
	.word	24271
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,249,4,3
	.word	24352
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,255,4,3
	.word	24439
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,133,5,3
	.word	24526
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,20,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	448
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_ICNT_Bits',0,20,140,5,3
	.word	24613
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,20,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	448
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	448
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	448
	.byte	8,0,2,35,0,0,36
	.byte	'Ifx_CPU_ICR_Bits',0,20,150,5,3
	.word	24704
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,20,153,5,16,4,11
	.byte	'ISP',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_ISP_Bits',0,20,156,5,3
	.word	24846
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,20,159,5,16,4,11
	.byte	'RST',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	448
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	448
	.byte	29,0,2,35,0,0,36
	.byte	'Ifx_CPU_KRST0_Bits',0,20,164,5,3
	.word	24912
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,20,167,5,16,4,11
	.byte	'RST',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	448
	.byte	31,0,2,35,0,0,36
	.byte	'Ifx_CPU_KRST1_Bits',0,20,171,5,3
	.word	25023
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,20,174,5,16,4,11
	.byte	'CLR',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	448
	.byte	31,0,2,35,0,0,36
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,20,178,5,3
	.word	25115
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,20,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	448
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	12,0,2,35,0,0,36
	.byte	'Ifx_CPU_LCX_Bits',0,20,186,5,3
	.word	25211
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,20,189,5,16,4,11
	.byte	'EN0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,20,223,5,3
	.word	25317
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,20,226,5,16,4,11
	.byte	'EN32',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,20,132,6,3
	.word	25900
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,20,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	448
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_M1CNT_Bits',0,20,139,6,3
	.word	26493
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,20,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	448
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_M2CNT_Bits',0,20,146,6,3
	.word	26586
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,20,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	448
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_M3CNT_Bits',0,20,153,6,3
	.word	26679
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,20,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_OSEL_Bits',0,20,159,6,3
	.word	26772
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,20,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	448
	.byte	31,0,2,35,0,0,36
	.byte	'Ifx_CPU_PC_Bits',0,20,166,6,3
	.word	26845
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,20,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	448
	.byte	30,0,2,35,0,0,36
	.byte	'Ifx_CPU_PCON0_Bits',0,20,174,6,3
	.word	26930
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,20,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	448
	.byte	30,0,2,35,0,0,36
	.byte	'Ifx_CPU_PCON1_Bits',0,20,182,6,3
	.word	27046
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,20,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	448
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CPU_PCON2_Bits',0,20,189,6,3
	.word	27157
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,20,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	448
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	448
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	448
	.byte	2,0,2,35,0,0,36
	.byte	'Ifx_CPU_PCXI_Bits',0,20,200,6,3
	.word	27258
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,20,203,6,16,4,11
	.byte	'TA',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_PIEAR_Bits',0,20,206,6,3
	.word	27411
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,20,209,6,16,4,11
	.byte	'IED',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	448
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	448
	.byte	15,0,2,35,0,0,36
	.byte	'Ifx_CPU_PIETR_Bits',0,20,224,6,3
	.word	27480
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,20,227,6,16,4,11
	.byte	'DAC',0,4
	.word	448
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CPU_PMA0_Bits',0,20,231,6,3
	.word	27764
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,20,234,6,16,4,11
	.byte	'CAC',0,4
	.word	448
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CPU_PMA1_Bits',0,20,238,6,3
	.word	27855
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,20,241,6,16,4,11
	.byte	'PSI',0,4
	.word	448
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CPU_PMA2_Bits',0,20,245,6,3
	.word	27946
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,20,248,6,16,4,11
	.byte	'FRE',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	448
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	448
	.byte	17,0,2,35,0,0,36
	.byte	'Ifx_CPU_PSTR_Bits',0,20,130,7,3
	.word	28037
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,20,133,7,16,4,11
	.byte	'CDC',0,4
	.word	448
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	448
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	448
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	448
	.byte	8,0,2,35,0,0,36
	.byte	'Ifx_CPU_PSW_Bits',0,20,145,7,3
	.word	28240
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,20,148,7,16,4,11
	.byte	'EN0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,20,182,7,3
	.word	28445
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,20,185,7,16,4,11
	.byte	'EN32',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,20,219,7,3
	.word	29012
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,20,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	448
	.byte	27,0,2,35,0,0,36
	.byte	'Ifx_CPU_RGN_LA_Bits',0,20,226,7,3
	.word	29589
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,20,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	448
	.byte	27,0,2,35,0,0,36
	.byte	'Ifx_CPU_RGN_UA_Bits',0,20,233,7,3
	.word	29684
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,20,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	448
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	448
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	448
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_SEGEN_Bits',0,20,242,7,3
	.word	29779
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,20,245,7,16,4,11
	.byte	'EN0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,20,151,8,3
	.word	29907
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,20,154,8,16,4,11
	.byte	'EN32',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,20,188,8,3
	.word	30490
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,20,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	7,0,2,35,0,0,36
	.byte	'Ifx_CPU_SMACON_Bits',0,20,196,8,3
	.word	31083
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,20,199,8,16,4,11
	.byte	'EN0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,20,233,8,3
	.word	31201
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,20,236,8,16,4,11
	.byte	'EN32',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,20,142,9,3
	.word	31790
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,20,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	448
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_CPU_SWEVT_Bits',0,20,153,9,3
	.word	32389
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,20,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	448
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	448
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	448
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	7,0,2,35,0,0,36
	.byte	'Ifx_CPU_SYSCON_Bits',0,20,171,9,3
	.word	32543
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,20,174,9,16,4,11
	.byte	'ASI',0,4
	.word	448
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	448
	.byte	27,0,2,35,0,0,36
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,20,178,9,3
	.word	32842
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,20,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	448
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	448
	.byte	15,0,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_CON_Bits',0,20,189,9,3
	.word	32940
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,20,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	448
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,20,196,9,3
	.word	33112
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,20,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	448
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	20,0,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,20,203,9,3
	.word	33241
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,20,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	448
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	20,0,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,20,211,9,3
	.word	33371
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,20,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	448
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	448
	.byte	8,0,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,20,218,9,3
	.word	33523
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,20,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	448
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	448
	.byte	8,0,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,20,226,9,3
	.word	33650
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,20,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	448
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	12,0,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,20,233,9,3
	.word	33799
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,20,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	448
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	448
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	448
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	448
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	448
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	448
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,20,246,9,3
	.word	33913
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,20,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,20,252,9,3
	.word	34157
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,20,255,9,16,4,11
	.byte	'T0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,20,138,10,3
	.word	34237
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,20,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CPU_TR_ADR_Bits',0,20,144,10,3
	.word	34432
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,20,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	448
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	448
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	448
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	448
	.byte	3,0,2,35,0,0,36
	.byte	'Ifx_CPU_TR_EVT_Bits',0,20,164,10,3
	.word	34505
	.byte	12,20,172,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15860
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_A',0,20,177,10,3
	.word	34823
	.byte	12,20,180,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15921
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_BIV',0,20,185,10,3
	.word	34882
	.byte	12,20,188,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16000
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_BLK_OMASK',0,20,193,10,3
	.word	34943
	.byte	12,20,196,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16138
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_BLK_OTAR',0,20,201,10,3
	.word	35010
	.byte	12,20,204,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16259
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_BLK_RABR',0,20,209,10,3
	.word	35076
	.byte	12,20,212,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16435
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_BTV',0,20,217,10,3
	.word	35142
	.byte	12,20,220,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16521
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_CCNT',0,20,225,10,3
	.word	35203
	.byte	12,20,228,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16610
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_CCTRL',0,20,233,10,3
	.word	35265
	.byte	12,20,236,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16757
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_COMPAT',0,20,241,10,3
	.word	35328
	.byte	12,20,244,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16886
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_CORE_ID',0,20,249,10,3
	.word	35392
	.byte	12,20,252,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16986
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_CPR_L',0,20,129,11,3
	.word	35457
	.byte	12,20,132,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17081
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_CPR_U',0,20,137,11,3
	.word	35520
	.byte	12,20,140,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17176
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_CPU_ID',0,20,145,11,3
	.word	35583
	.byte	12,20,148,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17286
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_CPXE',0,20,153,11,3
	.word	35647
	.byte	12,20,156,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17378
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_CREVT',0,20,161,11,3
	.word	35709
	.byte	12,20,164,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17532
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_CUS_ID',0,20,169,11,3
	.word	35772
	.byte	12,20,172,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17626
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_D',0,20,177,11,3
	.word	35836
	.byte	12,20,180,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17689
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DATR',0,20,185,11,3
	.word	35895
	.byte	12,20,188,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17915
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DBGSR',0,20,193,11,3
	.word	35957
	.byte	12,20,196,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18130
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DBGTCR',0,20,201,11,3
	.word	36020
	.byte	12,20,204,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18224
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DCON0',0,20,209,11,3
	.word	36084
	.byte	12,20,212,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18340
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DCON2',0,20,217,11,3
	.word	36147
	.byte	12,20,220,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18441
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DCX',0,20,225,11,3
	.word	36210
	.byte	12,20,228,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18534
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DEADD',0,20,233,11,3
	.word	36271
	.byte	12,20,236,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18614
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DIEAR',0,20,241,11,3
	.word	36334
	.byte	12,20,244,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18683
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DIETR',0,20,249,11,3
	.word	36397
	.byte	12,20,252,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18967
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,20,129,12,3
	.word	36460
	.byte	12,20,132,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19558
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,20,137,12,3
	.word	36540
	.byte	12,20,140,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20149
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,20,145,12,3
	.word	36620
	.byte	12,20,148,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20750
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,20,153,12,3
	.word	36700
	.byte	12,20,156,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21351
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,20,161,12,3
	.word	36780
	.byte	12,20,164,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21466
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,20,169,12,3
	.word	36854
	.byte	12,20,172,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21581
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DMS',0,20,177,12,3
	.word	36928
	.byte	12,20,180,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21674
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DPRE',0,20,185,12,3
	.word	36989
	.byte	12,20,188,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21766
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DPR_L',0,20,193,12,3
	.word	37051
	.byte	12,20,196,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21861
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DPR_U',0,20,201,12,3
	.word	37114
	.byte	12,20,204,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21956
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DPWE',0,20,209,12,3
	.word	37177
	.byte	12,20,212,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22048
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_DSTR',0,20,217,12,3
	.word	37239
	.byte	12,20,220,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22387
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_EXEVT',0,20,225,12,3
	.word	37301
	.byte	12,20,228,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22541
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FCX',0,20,233,12,3
	.word	37364
	.byte	12,20,236,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22647
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON0',0,20,241,12,3
	.word	37425
	.byte	12,20,244,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22865
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON1',0,20,249,12,3
	.word	37492
	.byte	12,20,252,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23056
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON2',0,20,129,13,3
	.word	37559
	.byte	12,20,132,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23356
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON3',0,20,137,13,3
	.word	37626
	.byte	12,20,140,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23661
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FLASHCON4',0,20,145,13,3
	.word	37693
	.byte	12,20,148,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23762
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,20,153,13,3
	.word	37760
	.byte	12,20,156,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24111
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,20,161,13,3
	.word	37830
	.byte	12,20,164,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24271
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,20,169,13,3
	.word	37900
	.byte	12,20,172,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24352
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,20,177,13,3
	.word	37969
	.byte	12,20,180,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24439
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,20,185,13,3
	.word	38040
	.byte	12,20,188,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24526
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,20,193,13,3
	.word	38111
	.byte	12,20,196,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24613
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_ICNT',0,20,201,13,3
	.word	38182
	.byte	12,20,204,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24704
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_ICR',0,20,209,13,3
	.word	38244
	.byte	12,20,212,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24846
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_ISP',0,20,217,13,3
	.word	38305
	.byte	12,20,220,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24912
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_KRST0',0,20,225,13,3
	.word	38366
	.byte	12,20,228,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25023
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_KRST1',0,20,233,13,3
	.word	38429
	.byte	12,20,236,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25115
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_KRSTCLR',0,20,241,13,3
	.word	38492
	.byte	12,20,244,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25211
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_LCX',0,20,249,13,3
	.word	38557
	.byte	12,20,252,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25317
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,20,129,14,3
	.word	38618
	.byte	12,20,132,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25900
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,20,137,14,3
	.word	38694
	.byte	12,20,140,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26493
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_M1CNT',0,20,145,14,3
	.word	38770
	.byte	12,20,148,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26586
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_M2CNT',0,20,153,14,3
	.word	38833
	.byte	12,20,156,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26679
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_M3CNT',0,20,161,14,3
	.word	38896
	.byte	12,20,164,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26772
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_OSEL',0,20,169,14,3
	.word	38959
	.byte	12,20,172,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26845
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PC',0,20,177,14,3
	.word	39021
	.byte	12,20,180,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26930
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PCON0',0,20,185,14,3
	.word	39081
	.byte	12,20,188,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27046
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PCON1',0,20,193,14,3
	.word	39144
	.byte	12,20,196,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27157
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PCON2',0,20,201,14,3
	.word	39207
	.byte	12,20,204,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27258
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PCXI',0,20,209,14,3
	.word	39270
	.byte	12,20,212,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27411
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PIEAR',0,20,217,14,3
	.word	39332
	.byte	12,20,220,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27480
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PIETR',0,20,225,14,3
	.word	39395
	.byte	12,20,228,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27764
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PMA0',0,20,233,14,3
	.word	39458
	.byte	12,20,236,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27855
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PMA1',0,20,241,14,3
	.word	39520
	.byte	12,20,244,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27946
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PMA2',0,20,249,14,3
	.word	39582
	.byte	12,20,252,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28037
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PSTR',0,20,129,15,3
	.word	39644
	.byte	12,20,132,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28240
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_PSW',0,20,137,15,3
	.word	39706
	.byte	12,20,140,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28445
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_RGN_ACCENA',0,20,145,15,3
	.word	39767
	.byte	12,20,148,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29012
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_RGN_ACCENB',0,20,153,15,3
	.word	39835
	.byte	12,20,156,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29589
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_RGN_LA',0,20,161,15,3
	.word	39903
	.byte	12,20,164,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29684
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_RGN_UA',0,20,169,15,3
	.word	39967
	.byte	12,20,172,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29779
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_SEGEN',0,20,177,15,3
	.word	40031
	.byte	12,20,180,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29907
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,20,185,15,3
	.word	40094
	.byte	12,20,188,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30490
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,20,193,15,3
	.word	40170
	.byte	12,20,196,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31083
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_SMACON',0,20,201,15,3
	.word	40246
	.byte	12,20,204,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31201
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,20,209,15,3
	.word	40310
	.byte	12,20,212,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31790
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,20,217,15,3
	.word	40389
	.byte	12,20,220,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32389
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_SWEVT',0,20,225,15,3
	.word	40468
	.byte	12,20,228,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32543
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_SYSCON',0,20,233,15,3
	.word	40531
	.byte	12,20,236,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32842
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TASK_ASI',0,20,241,15,3
	.word	40595
	.byte	12,20,244,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32940
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_CON',0,20,249,15,3
	.word	40661
	.byte	12,20,252,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33112
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,20,129,16,3
	.word	40726
	.byte	12,20,132,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33241
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,20,137,16,3
	.word	40802
	.byte	12,20,140,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33371
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,20,145,16,3
	.word	40880
	.byte	12,20,148,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33523
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,20,153,16,3
	.word	40958
	.byte	12,20,156,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33650
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,20,161,16,3
	.word	41035
	.byte	12,20,164,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33799
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,20,169,16,3
	.word	41112
	.byte	12,20,172,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33913
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,20,177,16,3
	.word	41183
	.byte	12,20,180,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34157
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TPS_TIMER',0,20,185,16,3
	.word	41255
	.byte	12,20,188,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34237
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TRIG_ACC',0,20,193,16,3
	.word	41322
	.byte	12,20,196,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34432
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TR_ADR',0,20,201,16,3
	.word	41388
	.byte	12,20,204,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34505
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CPU_TR_EVT',0,20,209,16,3
	.word	41452
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,20,221,16,25,16,13
	.byte	'LA',0
	.word	39903
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	39967
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	39767
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	39835
	.byte	4,2,35,12,0,14
	.word	41516
	.byte	36
	.byte	'Ifx_CPU_RGN',0,20,227,16,3
	.word	41592
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,20,242,16,25,12,13
	.byte	'RABR',0
	.word	35076
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	35010
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	34943
	.byte	4,2,35,8,0,14
	.word	41618
	.byte	36
	.byte	'Ifx_CPU_BLK',0,20,247,16,3
	.word	41681
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,20,134,17,25,28,13
	.byte	'CON',0
	.word	37760
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	37900
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	37830
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2621
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	37969
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	38040
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	38111
	.byte	4,2,35,24,0,14
	.word	41707
	.byte	36
	.byte	'Ifx_CPU_FPU_TRAP',0,20,143,17,3
	.word	41832
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,20,158,17,25,8,13
	.byte	'L',0
	.word	37051
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	37114
	.byte	4,2,35,4,0,14
	.word	41863
	.byte	36
	.byte	'Ifx_CPU_DPR',0,20,162,17,3
	.word	41905
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,20,177,17,25,8,13
	.byte	'L',0
	.word	35457
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	35520
	.byte	4,2,35,4,0,14
	.word	41931
	.byte	36
	.byte	'Ifx_CPU_CPR',0,20,181,17,3
	.word	41973
	.byte	15,12
	.word	41255
	.byte	16,2,0,10
	.byte	'_Ifx_CPU_TPS',0,20,196,17,25,16,13
	.byte	'CON',0
	.word	40661
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	41999
	.byte	12,2,35,4,0,14
	.word	42008
	.byte	36
	.byte	'Ifx_CPU_TPS',0,20,200,17,3
	.word	42056
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,20,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	40880
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	40802
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	41035
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	40958
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	40726
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	41183
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	41112
	.byte	4,2,35,24,0,14
	.word	42082
	.byte	36
	.byte	'Ifx_CPU_TPS_EXTIM',0,20,224,17,3
	.word	42231
	.byte	10
	.byte	'_Ifx_CPU_TR',0,20,239,17,25,8,13
	.byte	'EVT',0
	.word	41452
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	41388
	.byte	4,2,35,4,0,14
	.word	42263
	.byte	36
	.byte	'Ifx_CPU_TR',0,20,243,17,3
	.word	42308
	.byte	15,128,34
	.word	600
	.byte	16,255,33,0,15,236,253,2
	.word	600
	.byte	16,235,253,2,0,15,244,31
	.word	600
	.byte	16,243,31,0,15,128,1
	.word	41516
	.byte	16,7,0,14
	.word	42368
	.byte	15,232,1
	.word	600
	.byte	16,231,1,0,15,128,48
	.word	600
	.byte	16,255,47,0,15,128,3
	.word	41618
	.byte	16,31,0,14
	.word	42405
	.byte	15,160,39
	.word	600
	.byte	16,159,39,0,15,208,223,1
	.word	600
	.byte	16,207,223,1,0,15,248,1
	.word	600
	.byte	16,247,1,0,15,244,29
	.word	600
	.byte	16,243,29,0,15,188,3
	.word	600
	.byte	16,187,3,0,15,232,3
	.word	600
	.byte	16,231,3,0,15,252,23
	.word	600
	.byte	16,251,23,0,14
	.word	41707
	.byte	15,228,63
	.word	600
	.byte	16,227,63,0,15,144,1
	.word	41863
	.byte	16,17,0,14
	.word	42515
	.byte	15,240,30
	.word	600
	.byte	16,239,30,0,15,80
	.word	41931
	.byte	16,9,0,14
	.word	42541
	.byte	15,176,31
	.word	600
	.byte	16,175,31,0,15,16
	.word	600
	.byte	16,15,0,15,152,7
	.word	600
	.byte	16,151,7,0,14
	.word	42008
	.byte	15,48
	.word	600
	.byte	16,47,0,14
	.word	42082
	.byte	15,164,23
	.word	600
	.byte	16,163,23,0,15,64
	.word	42263
	.byte	16,7,0,14
	.word	42616
	.byte	15,192,23
	.word	600
	.byte	16,191,23,0,15,28
	.word	600
	.byte	16,27,0,15,180,1
	.word	600
	.byte	16,179,1,0,15,172,1
	.word	600
	.byte	16,171,1,0,15,64
	.word	35836
	.byte	16,15,0,15,64
	.word	600
	.byte	16,63,0,15,64
	.word	34823
	.byte	16,15,0,10
	.byte	'_Ifx_CPU',0,20,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	42333
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	37425
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	37492
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	37559
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	37626
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	37693
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	42344
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	38366
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	38429
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	38492
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	42357
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	42378
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	4441
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	40310
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	40389
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	4441
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	40310
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	40389
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	4441
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	40310
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	40389
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	4441
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	40310
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	40389
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	4441
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	40310
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	40389
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	4441
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	40310
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	40389
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	4441
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	40310
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	40389
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	4441
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	40310
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	40389
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	40094
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	40170
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	4441
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	38618
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	38694
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	42383
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	36780
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	36854
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	36540
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	36700
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	36780
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	36854
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	36540
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	36700
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	36780
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	36854
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	36540
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	36700
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	36780
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	36854
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	36540
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	36700
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	36780
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	36854
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	36540
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	36700
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	36780
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	36854
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	36540
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	36700
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	36780
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	36854
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	36540
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	36700
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	36780
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	36854
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	36540
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	36700
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	4441
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	36460
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	36620
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	4441
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	36460
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	36620
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	4441
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	36460
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	36620
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	4441
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	36460
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	36620
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	4441
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	36460
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	36620
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	4441
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	36460
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	36620
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	4441
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	36460
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	36620
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	4441
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	36460
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	36620
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	42394
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	38959
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	4781
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	42415
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	42420
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	40031
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	42431
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	40595
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	42444
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	39458
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	39520
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	39582
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	42455
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	36147
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	4441
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	40246
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	37239
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	2621
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	35895
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	36271
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	36334
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	36397
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	3812
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	36084
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	42466
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	39644
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	39144
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	39207
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	39081
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	39332
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	39395
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	42477
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	35328
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	42488
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	42499
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	42504
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	42525
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	42530
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	42550
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	42555
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	35647
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	35647
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	35647
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	35647
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	36989
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	36989
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	36989
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	36989
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	37177
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	37177
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	37177
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	37177
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	42566
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	35647
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	35647
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	4441
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	36989
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	36989
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	4441
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	37177
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	37177
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	42575
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	42586
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	42591
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	42600
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	42605
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	42625
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	42630
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	35265
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	35203
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	38182
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	38770
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	38833
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	38896
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	42383
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	35957
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	2621
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	37301
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	35709
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	40468
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	42641
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	41322
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	4781
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	36928
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	36210
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	36020
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	42650
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	39270
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	39706
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	39021
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	4441
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	40531
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	35583
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	35392
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	34882
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	35142
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	38305
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	38244
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	4441
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	37364
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	38557
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	42566
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	35772
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	42661
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	42672
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	42681
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	42690
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	42681
	.byte	64,4,35,192,255,7,0,14
	.word	42699
	.byte	36
	.byte	'Ifx_CPU',0,20,210,19,3
	.word	47797
	.byte	17,9,124,9,1,18
	.byte	'IfxCpu_Id_0',0,0,18
	.byte	'IfxCpu_Id_1',0,1,18
	.byte	'IfxCpu_Id_2',0,2,18
	.byte	'IfxCpu_Id_none',0,3,0,36
	.byte	'IfxCpu_Id',0,9,130,1,3
	.word	47819
	.byte	36
	.byte	'IfxCpu_ResourceCpu',0,9,161,1,3
	.word	9381
	.byte	36
	.byte	'Ifx_SRC_SRCR_Bits',0,11,85,3
	.word	9917
	.byte	36
	.byte	'Ifx_SRC_SRCR',0,11,98,3
	.word	10207
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,11,110,25,4,13
	.byte	'SB',0
	.word	10207
	.byte	4,2,35,0,0,14
	.word	47978
	.byte	36
	.byte	'Ifx_SRC_CPU_CPU',0,11,113,3
	.word	48013
	.byte	15,12
	.word	47978
	.byte	16,2,0,14
	.word	48042
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,11,128,1,25,12,13
	.byte	'CPU',0
	.word	48051
	.byte	12,2,35,0,0,14
	.word	48056
	.byte	36
	.byte	'Ifx_SRC_CPU',0,11,131,1,3
	.word	48089
	.byte	15,8
	.word	10207
	.byte	16,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,11,146,1,25,8,13
	.byte	'SR',0
	.word	48115
	.byte	8,2,35,0,0,14
	.word	48124
	.byte	36
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,11,149,1,3
	.word	48170
	.byte	14
	.word	48124
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,11,164,1,25,8,13
	.byte	'CERBERUS',0
	.word	48210
	.byte	8,2,35,0,0,14
	.word	48215
	.byte	36
	.byte	'Ifx_SRC_CERBERUS',0,11,167,1,3
	.word	48258
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,11,182,1,25,12,13
	.byte	'TX',0
	.word	10207
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10207
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10207
	.byte	4,2,35,8,0,14
	.word	48289
	.byte	36
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,11,187,1,3
	.word	48356
	.byte	15,144,1
	.word	48289
	.byte	16,11,0,14
	.word	48392
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,11,202,1,25,144,1,13
	.byte	'ASCLIN',0
	.word	48402
	.byte	144,1,2,35,0,0,14
	.word	48407
	.byte	36
	.byte	'Ifx_SRC_ASCLIN',0,11,205,1,3
	.word	48448
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,11,220,1,25,20,13
	.byte	'TX',0
	.word	10207
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10207
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10207
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10207
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	10207
	.byte	4,2,35,16,0,14
	.word	48477
	.byte	36
	.byte	'Ifx_SRC_QSPI_QSPI',0,11,227,1,3
	.word	48563
	.byte	15,100
	.word	48477
	.byte	16,4,0,14
	.word	48595
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,11,242,1,25,100,13
	.byte	'QSPI',0
	.word	48604
	.byte	100,2,35,0,0,14
	.word	48609
	.byte	36
	.byte	'Ifx_SRC_QSPI',0,11,245,1,3
	.word	48644
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,11,132,2,25,4,13
	.byte	'SR',0
	.word	10207
	.byte	4,2,35,0,0,14
	.word	48671
	.byte	36
	.byte	'Ifx_SRC_HSCT_HSCT',0,11,135,2,3
	.word	48709
	.byte	15,4
	.word	48671
	.byte	16,0,0,14
	.word	48741
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,11,150,2,25,4,13
	.byte	'HSCT',0
	.word	48750
	.byte	4,2,35,0,0,14
	.word	48755
	.byte	36
	.byte	'Ifx_SRC_HSCT',0,11,153,2,3
	.word	48790
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,11,168,2,25,16,13
	.byte	'COK',0
	.word	10207
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10207
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10207
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10207
	.byte	4,2,35,12,0,14
	.word	48817
	.byte	36
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,11,174,2,3
	.word	48898
	.byte	15,64
	.word	48817
	.byte	16,3,0,14
	.word	48933
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,11,189,2,25,68,13
	.byte	'CH',0
	.word	48942
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10207
	.byte	4,2,35,64,0,14
	.word	48947
	.byte	36
	.byte	'Ifx_SRC_HSSL_HSSL',0,11,193,2,3
	.word	48998
	.byte	15,68
	.word	48947
	.byte	16,0,0,14
	.word	49030
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,11,208,2,25,68,13
	.byte	'HSSL',0
	.word	49039
	.byte	68,2,35,0,0,14
	.word	49044
	.byte	36
	.byte	'Ifx_SRC_HSSL',0,11,211,2,3
	.word	49079
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,11,226,2,25,16,13
	.byte	'DTR',0
	.word	10207
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10207
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	10207
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2621
	.byte	4,2,35,12,0,14
	.word	49106
	.byte	36
	.byte	'Ifx_SRC_I2C_I2C',0,11,232,2,3
	.word	49187
	.byte	15,16
	.word	49106
	.byte	16,0,0,14
	.word	49217
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,11,247,2,25,16,13
	.byte	'I2C',0
	.word	49226
	.byte	16,2,35,0,0,14
	.word	49231
	.byte	36
	.byte	'Ifx_SRC_I2C',0,11,250,2,3
	.word	49264
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,11,137,3,25,4,13
	.byte	'SR',0
	.word	10207
	.byte	4,2,35,0,0,14
	.word	49290
	.byte	36
	.byte	'Ifx_SRC_SENT_SENT',0,11,140,3,3
	.word	49328
	.byte	15,40
	.word	49290
	.byte	16,9,0,14
	.word	49360
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,11,155,3,25,40,13
	.byte	'SENT',0
	.word	49369
	.byte	40,2,35,0,0,14
	.word	49374
	.byte	36
	.byte	'Ifx_SRC_SENT',0,11,158,3,3
	.word	49409
	.byte	15,20
	.word	10207
	.byte	16,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,11,173,3,25,20,13
	.byte	'SR',0
	.word	49436
	.byte	20,2,35,0,0,14
	.word	49445
	.byte	36
	.byte	'Ifx_SRC_MSC_MSC',0,11,176,3,3
	.word	49481
	.byte	15,40
	.word	49445
	.byte	16,1,0,14
	.word	49511
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,11,191,3,25,40,13
	.byte	'MSC',0
	.word	49520
	.byte	40,2,35,0,0,14
	.word	49525
	.byte	36
	.byte	'Ifx_SRC_MSC',0,11,194,3,3
	.word	49558
	.byte	15,16
	.word	10207
	.byte	16,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,11,209,3,25,16,13
	.byte	'SR',0
	.word	49584
	.byte	16,2,35,0,0,14
	.word	49593
	.byte	36
	.byte	'Ifx_SRC_CCU6_CCU',0,11,212,3,3
	.word	49630
	.byte	15,32
	.word	49593
	.byte	16,1,0,14
	.word	49661
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,11,227,3,25,32,13
	.byte	'CCU',0
	.word	49670
	.byte	32,2,35,0,0,14
	.word	49675
	.byte	36
	.byte	'Ifx_SRC_CCU6',0,11,230,3,3
	.word	49709
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,11,245,3,25,24,13
	.byte	'CIRQ',0
	.word	10207
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10207
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10207
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10207
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10207
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10207
	.byte	4,2,35,20,0,14
	.word	49736
	.byte	36
	.byte	'Ifx_SRC_GPT12_GPT12',0,11,253,3,3
	.word	49838
	.byte	15,24
	.word	49736
	.byte	16,0,0,14
	.word	49872
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,11,140,4,25,24,13
	.byte	'GPT12',0
	.word	49881
	.byte	24,2,35,0,0,14
	.word	49886
	.byte	36
	.byte	'Ifx_SRC_GPT12',0,11,143,4,3
	.word	49923
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,11,158,4,25,8,13
	.byte	'SR',0
	.word	48115
	.byte	8,2,35,0,0,14
	.word	49951
	.byte	36
	.byte	'Ifx_SRC_STM_STM',0,11,161,4,3
	.word	49987
	.byte	15,24
	.word	49951
	.byte	16,2,0,14
	.word	50017
	.byte	10
	.byte	'_Ifx_SRC_STM',0,11,176,4,25,24,13
	.byte	'STM',0
	.word	50026
	.byte	24,2,35,0,0,14
	.word	50031
	.byte	36
	.byte	'Ifx_SRC_STM',0,11,179,4,3
	.word	50064
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,11,194,4,25,4,13
	.byte	'SR',0
	.word	10207
	.byte	4,2,35,0,0,14
	.word	50090
	.byte	36
	.byte	'Ifx_SRC_FCE_FCE0',0,11,197,4,3
	.word	50127
	.byte	14
	.word	50090
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,11,212,4,25,4,13
	.byte	'FCE0',0
	.word	50158
	.byte	4,2,35,0,0,14
	.word	50163
	.byte	36
	.byte	'Ifx_SRC_FCE',0,11,215,4,3
	.word	50197
	.byte	15,32
	.word	600
	.byte	16,31,0,15,128,4
	.word	10207
	.byte	16,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,11,230,4,25,176,4,13
	.byte	'ERR',0
	.word	49584
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	50223
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	50232
	.byte	128,4,2,35,48,0,14
	.word	50242
	.byte	36
	.byte	'Ifx_SRC_DMA_DMA',0,11,235,4,3
	.word	50314
	.byte	15,176,4
	.word	50242
	.byte	16,0,0,14
	.word	50344
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,11,250,4,25,176,4,13
	.byte	'DMA',0
	.word	50354
	.byte	176,4,2,35,0,0,14
	.word	50359
	.byte	36
	.byte	'Ifx_SRC_DMA',0,11,253,4,3
	.word	50394
	.byte	15,40
	.word	10207
	.byte	16,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,11,140,5,25,40,13
	.byte	'SR',0
	.word	50420
	.byte	40,2,35,0,0,14
	.word	50429
	.byte	36
	.byte	'Ifx_SRC_GETH_GETH',0,11,143,5,3
	.word	50467
	.byte	15,40
	.word	50429
	.byte	16,0,0,14
	.word	50499
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,11,158,5,25,40,13
	.byte	'GETH',0
	.word	50508
	.byte	40,2,35,0,0,14
	.word	50513
	.byte	36
	.byte	'Ifx_SRC_GETH',0,11,161,5,3
	.word	50548
	.byte	15,64
	.word	10207
	.byte	16,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,11,176,5,25,64,13
	.byte	'INT',0
	.word	50575
	.byte	64,2,35,0,0,14
	.word	50584
	.byte	36
	.byte	'Ifx_SRC_CAN_CAN',0,11,179,5,3
	.word	50621
	.byte	15,128,1
	.word	50584
	.byte	16,1,0,14
	.word	50651
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,11,194,5,25,128,1,13
	.byte	'CAN',0
	.word	50661
	.byte	128,1,2,35,0,0,14
	.word	50666
	.byte	36
	.byte	'Ifx_SRC_CAN',0,11,197,5,3
	.word	50701
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,11,212,5,25,16,13
	.byte	'SR0',0
	.word	10207
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10207
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10207
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10207
	.byte	4,2,35,12,0,14
	.word	50727
	.byte	36
	.byte	'Ifx_SRC_VADC_G',0,11,218,5,3
	.word	50802
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,11,237,5,25,4,13
	.byte	'SR0',0
	.word	10207
	.byte	4,2,35,0,0,14
	.word	50831
	.byte	36
	.byte	'Ifx_SRC_VADC_FC',0,11,240,5,3
	.word	50868
	.byte	15,64
	.word	50727
	.byte	16,3,0,14
	.word	50898
	.byte	14
	.word	50727
	.byte	14
	.word	50727
	.byte	14
	.word	50727
	.byte	14
	.word	50727
	.byte	15,16
	.word	50831
	.byte	16,3,0,14
	.word	50932
	.byte	15,32
	.word	50727
	.byte	16,1,0,14
	.word	50946
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,11,128,6,25,128,2,13
	.byte	'G',0
	.word	50907
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	42681
	.byte	64,2,35,64,13
	.byte	'G8',0
	.word	50912
	.byte	16,3,35,128,1,13
	.byte	'G9',0
	.word	50917
	.byte	16,3,35,144,1,13
	.byte	'G10',0
	.word	50922
	.byte	16,3,35,160,1,13
	.byte	'G11',0
	.word	50927
	.byte	16,3,35,176,1,13
	.byte	'FC',0
	.word	50941
	.byte	16,3,35,192,1,13
	.byte	'reserved_D0',0
	.word	42566
	.byte	16,3,35,208,1,13
	.byte	'CG',0
	.word	50955
	.byte	32,3,35,224,1,0,14
	.word	50960
	.byte	36
	.byte	'Ifx_SRC_VADC',0,11,139,6,3
	.word	51116
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,11,154,6,25,8,13
	.byte	'SRM',0
	.word	10207
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10207
	.byte	4,2,35,4,0,14
	.word	51143
	.byte	36
	.byte	'Ifx_SRC_DSADC_DSADC',0,11,158,6,3
	.word	51197
	.byte	15,48
	.word	51143
	.byte	16,5,0,14
	.word	51231
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,11,173,6,25,48,13
	.byte	'DSADC',0
	.word	51240
	.byte	48,2,35,0,0,14
	.word	51245
	.byte	36
	.byte	'Ifx_SRC_DSADC',0,11,176,6,3
	.word	51282
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,11,191,6,25,48,13
	.byte	'INT0',0
	.word	10207
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	10207
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	10207
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	10207
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	10207
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	10207
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	10207
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	10207
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	10207
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10207
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4441
	.byte	8,2,35,40,0,14
	.word	51310
	.byte	36
	.byte	'Ifx_SRC_ERAY_ERAY',0,11,204,6,3
	.word	51505
	.byte	15,48
	.word	51310
	.byte	16,0,0,14
	.word	51537
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,11,219,6,25,48,13
	.byte	'ERAY',0
	.word	51546
	.byte	48,2,35,0,0,14
	.word	51551
	.byte	36
	.byte	'Ifx_SRC_ERAY',0,11,222,6,3
	.word	51586
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,11,237,6,25,8,13
	.byte	'HSM',0
	.word	48115
	.byte	8,2,35,0,0,14
	.word	51613
	.byte	36
	.byte	'Ifx_SRC_HSM_HSM',0,11,240,6,3
	.word	51650
	.byte	15,8
	.word	51613
	.byte	16,0,0,14
	.word	51680
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,11,255,6,25,8,13
	.byte	'HSM',0
	.word	51689
	.byte	8,2,35,0,0,14
	.word	51694
	.byte	36
	.byte	'Ifx_SRC_HSM',0,11,130,7,3
	.word	51727
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,11,145,7,25,16,13
	.byte	'SCUERU',0
	.word	49584
	.byte	16,2,35,0,0,14
	.word	51753
	.byte	36
	.byte	'Ifx_SRC_SCU',0,11,148,7,3
	.word	51789
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,11,163,7,25,4,13
	.byte	'SR',0
	.word	10207
	.byte	4,2,35,0,0,14
	.word	51815
	.byte	36
	.byte	'Ifx_SRC_PMS_PMS',0,11,166,7,3
	.word	51851
	.byte	15,16
	.word	51815
	.byte	16,3,0,14
	.word	51881
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,11,181,7,25,16,13
	.byte	'PMS',0
	.word	51890
	.byte	16,2,35,0,0,14
	.word	51895
	.byte	36
	.byte	'Ifx_SRC_PMS',0,11,184,7,3
	.word	51928
	.byte	15,12
	.word	10207
	.byte	16,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,11,199,7,25,12,13
	.byte	'SR',0
	.word	51954
	.byte	12,2,35,0,0,14
	.word	51963
	.byte	36
	.byte	'Ifx_SRC_SMU_SMU',0,11,202,7,3
	.word	51999
	.byte	15,12
	.word	51963
	.byte	16,0,0,14
	.word	52029
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,11,217,7,25,12,13
	.byte	'SMU',0
	.word	52038
	.byte	12,2,35,0,0,14
	.word	52043
	.byte	36
	.byte	'Ifx_SRC_SMU',0,11,220,7,3
	.word	52076
	.byte	15,32
	.word	10207
	.byte	16,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,11,235,7,25,32,13
	.byte	'SR',0
	.word	52102
	.byte	32,2,35,0,0,14
	.word	52111
	.byte	36
	.byte	'Ifx_SRC_PSI5_PSI5',0,11,238,7,3
	.word	52149
	.byte	15,32
	.word	52111
	.byte	16,0,0,14
	.word	52181
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,11,253,7,25,32,13
	.byte	'PSI5',0
	.word	52190
	.byte	32,2,35,0,0,14
	.word	52195
	.byte	36
	.byte	'Ifx_SRC_PSI5',0,11,128,8,3
	.word	52230
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,11,143,8,25,24,13
	.byte	'LI0',0
	.word	10207
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	10207
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	10207
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	10207
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	10207
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	10207
	.byte	4,2,35,20,0,14
	.word	52257
	.byte	36
	.byte	'Ifx_SRC_DAM_DAM',0,11,151,8,3
	.word	52358
	.byte	15,24
	.word	52257
	.byte	16,0,0,14
	.word	52388
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,11,166,8,25,24,13
	.byte	'DAM',0
	.word	52397
	.byte	24,2,35,0,0,14
	.word	52402
	.byte	36
	.byte	'Ifx_SRC_DAM',0,11,169,8,3
	.word	52435
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,11,184,8,25,32,13
	.byte	'SR',0
	.word	52102
	.byte	32,2,35,0,0,14
	.word	52461
	.byte	36
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,11,187,8,3
	.word	52501
	.byte	15,32
	.word	52461
	.byte	16,0,0,14
	.word	52535
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,11,202,8,25,32,13
	.byte	'PSI5S',0
	.word	52544
	.byte	32,2,35,0,0,14
	.word	52549
	.byte	36
	.byte	'Ifx_SRC_PSI5S',0,11,205,8,3
	.word	52586
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,11,220,8,25,32,13
	.byte	'SR',0
	.word	52102
	.byte	32,2,35,0,0,14
	.word	52614
	.byte	36
	.byte	'Ifx_SRC_GPSR_GPSR',0,11,223,8,3
	.word	52652
	.byte	15,96
	.word	52614
	.byte	16,2,0,14
	.word	52684
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,11,238,8,25,96,13
	.byte	'GPSR',0
	.word	52693
	.byte	96,2,35,0,0,14
	.word	52698
	.byte	36
	.byte	'Ifx_SRC_GPSR',0,11,241,8,3
	.word	52733
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,4,68,16,4,11
	.byte	'EN0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_ACCEN00_Bits',0,4,102,3
	.word	52760
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,4,105,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_ACCEN01_Bits',0,4,108,3
	.word	53319
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,4,111,16,4,11
	.byte	'EN0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_ACCEN10_Bits',0,4,145,1,3
	.word	53398
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,4,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_ACCEN11_Bits',0,4,151,1,3
	.word	53958
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	600
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	425
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,164,1,3
	.word	54039
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	600
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	600
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	600
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	600
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	600
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	600
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	600
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	600
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	600
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,181,1,3
	.word	54265
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	600
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	600
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	600
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	600
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	600
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	600
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	600
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	600
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	600
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,199,1,3
	.word	54538
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,202,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	600
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	600
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	600
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	425
	.byte	10,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	600
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,214,1,3
	.word	54864
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,217,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	600
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	425
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,234,1,3
	.word	55142
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,237,1,16,4,11
	.byte	'LOTHR',0,2
	.word	617
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	425
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	600
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,246,1,3
	.word	55511
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,249,1,16,4,11
	.byte	'GETHDIV',0,1
	.word	600
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	600
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	425
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,129,2,3
	.word	55691
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,132,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	600
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	425
	.byte	26,0,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,136,2,3
	.word	55863
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,139,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	600
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	425
	.byte	26,0,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,143,2,3
	.word	55963
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,146,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	600
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	425
	.byte	26,0,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,150,2,3
	.word	56063
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,153,2,16,4,11
	.byte	'CHREV',0,1
	.word	600
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	600
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	600
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	600
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	600
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	600
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	600
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,164,2,3
	.word	56163
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,4,167,2,16,4,11
	.byte	'LOWER',0,2
	.word	617
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	617
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,4,179,2,3
	.word	56366
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,4,182,2,16,4,11
	.byte	'RESULT',0,2
	.word	617
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	425
	.byte	20,0,2,35,0,0,36
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,4,186,2,3
	.word	56598
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,4,189,2,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	448
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_SCU_EICON0_Bits',0,4,195,2,3
	.word	56700
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,4,198,2,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	425
	.byte	26,0,2,35,0,0,36
	.byte	'Ifx_SCU_EICON1_Bits',0,4,207,2,3
	.word	56828
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,210,2,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	600
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	600
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	425
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	600
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	600
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_EICR_Bits',0,4,229,2,3
	.word	57017
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,4,232,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	600
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	600
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	600
	.byte	4,0,2,35,3,0,36
	.byte	'Ifx_SCU_EIFILT_Bits',0,4,254,2,3
	.word	57381
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,129,3,16,4,11
	.byte	'INTF0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	425
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_SCU_EIFR_Bits',0,4,140,3,3
	.word	57820
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,4,143,3,16,4,11
	.byte	'AE',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	617
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_EISR_Bits',0,4,153,3,3
	.word	58031
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,156,3,16,4,11
	.byte	'POL',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	617
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	617
	.byte	14,0,2,35,2,0,36
	.byte	'Ifx_SCU_EMSR_Bits',0,4,166,3,3
	.word	58207
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,4,169,3,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	600
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	600
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	600
	.byte	4,0,2,35,3,0,36
	.byte	'Ifx_SCU_EMSSW_Bits',0,4,175,3,3
	.word	58401
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,178,3,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	617
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	425
	.byte	23,0,2,35,0,0,36
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,183,3,3
	.word	58536
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,186,3,16,4,11
	.byte	'ARI',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	425
	.byte	30,0,2,35,0,0,36
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,191,3,3
	.word	58672
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,194,3,16,4,11
	.byte	'EN0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	600
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	617
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	600
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	600
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	600
	.byte	8,0,2,35,3,0,36
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,205,3,3
	.word	58783
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,208,3,16,4,11
	.byte	'STEP',0,2
	.word	617
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	600
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	600
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	617
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	600
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_FDR_Bits',0,4,216,3,3
	.word	59001
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,219,3,16,4,11
	.byte	'FS0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	8,0,2,35,3,0,36
	.byte	'Ifx_SCU_FMR_Bits',0,4,239,3,3
	.word	59164
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,242,3,16,4,11
	.byte	'MODREV',0,1
	.word	600
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	600
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_ID_Bits',0,4,247,3,3
	.word	59500
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,250,3,16,4,11
	.byte	'IPEN00',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	600
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	600
	.byte	2,0,2,35,3,0,36
	.byte	'Ifx_SCU_IGCR_Bits',0,4,146,4,3
	.word	59607
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,149,4,16,4,11
	.byte	'P0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	425
	.byte	30,0,2,35,0,0,36
	.byte	'Ifx_SCU_IN_Bits',0,4,154,4,3
	.word	60059
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,157,4,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	600
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	600
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_IOCR_Bits',0,4,164,4,3
	.word	60158
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,167,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	425
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	617
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,177,4,3
	.word	60308
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,180,4,16,4,11
	.byte	'SEED',0,4
	.word	425
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	600
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	600
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	600
	.byte	4,0,2,35,3,0,36
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,187,4,3
	.word	60546
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,190,4,16,4,11
	.byte	'LENGTH',0,2
	.word	617
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	425
	.byte	20,0,2,35,0,0,36
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,194,4,3
	.word	60707
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,4,197,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,4,200,4,3
	.word	60813
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,4,203,4,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	617
	.byte	14,1,2,35,0,11
	.byte	'reserved_15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	617
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_LCLCON0_Bits',0,4,211,4,3
	.word	60899
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,4,214,4,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	617
	.byte	14,1,2,35,0,11
	.byte	'reserved_15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	617
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_LCLCON1_Bits',0,4,222,4,3
	.word	61080
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,225,4,16,4,11
	.byte	'LCLT0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	617
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	617
	.byte	10,0,2,35,2,0,36
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,241,4,3
	.word	61261
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,244,4,16,4,11
	.byte	'DEPT',0,1
	.word	600
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	617
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_MANID_Bits',0,4,249,4,3
	.word	61605
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,252,4,16,4,11
	.byte	'PS0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	617
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	617
	.byte	14,0,2,35,2,0,36
	.byte	'Ifx_SCU_OMR_Bits',0,4,132,5,3
	.word	61716
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,135,5,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	600
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	600
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	600
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	600
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	600
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	600
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	600
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	600
	.byte	4,0,2,35,3,0,36
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,156,5,3
	.word	61874
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,159,5,16,4,11
	.byte	'P0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	425
	.byte	30,0,2,35,0,0,36
	.byte	'Ifx_SCU_OUT_Bits',0,4,164,5,3
	.word	62285
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,167,5,16,4,11
	.byte	'CSEL0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	617
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	600
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	600
	.byte	6,0,2,35,3,0,36
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,183,5,3
	.word	62386
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,186,5,16,4,11
	.byte	'OVEN0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	425
	.byte	26,0,2,35,0,0,36
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,195,5,3
	.word	62719
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,198,5,16,4,11
	.byte	'PDIS0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	425
	.byte	30,0,2,35,0,0,36
	.byte	'Ifx_SCU_PDISC_Bits',0,4,203,5,3
	.word	62921
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,206,5,16,4,11
	.byte	'PD0',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	600
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	600
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	600
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	425
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_SCU_PDR_Bits',0,4,213,5,3
	.word	63032
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,216,5,16,4,11
	.byte	'PDR0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	425
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_SCU_PDRR_Bits',0,4,227,5,3
	.word	63165
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,4,230,5,16,4,11
	.byte	'DIVBY',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	617
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	600
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	600
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	600
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	600
	.byte	5,0,2,35,3,0,36
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,4,241,5,3
	.word	63368
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,4,244,5,16,4,11
	.byte	'K2DIV',0,1
	.word	600
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	600
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	425
	.byte	21,0,2,35,0,0,36
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,4,250,5,3
	.word	63608
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,4,253,5,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	425
	.byte	25,0,2,35,0,0,36
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,4,135,6,3
	.word	63752
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,4,138,6,16,4,11
	.byte	'REQSLP',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	425
	.byte	21,0,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR0_Bits',0,4,144,6,3
	.word	63974
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,4,147,6,16,4,11
	.byte	'REQSLP',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	425
	.byte	21,0,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR1_Bits',0,4,153,6,3
	.word	64110
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,4,156,6,16,4,11
	.byte	'REQSLP',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	425
	.byte	21,0,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR2_Bits',0,4,162,6,3
	.word	64246
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,4,165,6,16,4,11
	.byte	'REQSLP',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	425
	.byte	21,0,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR3_Bits',0,4,171,6,3
	.word	64382
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,4,174,6,16,4,11
	.byte	'REQSLP',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	425
	.byte	21,0,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR4_Bits',0,4,180,6,3
	.word	64518
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,4,183,6,16,4,11
	.byte	'REQSLP',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	425
	.byte	21,0,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR5_Bits',0,4,189,6,3
	.word	64654
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,4,192,6,16,4,11
	.byte	'CPU0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	617
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	617
	.byte	12,0,2,35,2,0,36
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,4,206,6,3
	.word	64790
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,209,6,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	600
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	425
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	600
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	600
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,220,6,3
	.word	65062
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,4,223,6,16,4,11
	.byte	'LJTEN',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	617
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	600
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	617
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	600
	.byte	2,0,2,35,3,0,36
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,4,242,6,3
	.word	65307
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,4,245,6,16,4,11
	.byte	'LJTCV',0,2
	.word	617
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	617
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	600
	.byte	6,0,2,35,3,0,36
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,4,250,6,3
	.word	65695
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,4,253,6,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	600
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	600
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	600
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	600
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,4,136,7,3
	.word	65813
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,4,139,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	600
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	600
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	600
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	600
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	617
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	600
	.byte	6,0,2,35,3,0,36
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,4,151,7,3
	.word	66056
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,154,7,16,4,11
	.byte	'ESR0',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	600
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	600
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	600
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	600
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	600
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	600
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	600
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	600
	.byte	2,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	600
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	617
	.byte	10,0,2,35,2,0,36
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,168,7,3
	.word	66323
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,171,7,16,4,11
	.byte	'FRTO',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	617
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,185,7,3
	.word	66603
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,4,188,7,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_RSTCON3_Bits',0,4,191,7,3
	.word	66908
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,194,7,16,4,11
	.byte	'ESR0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	600
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,224,7,3
	.word	66989
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,4,227,7,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	448
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_SCU_SEICON0_Bits',0,4,233,7,3
	.word	67557
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,4,236,7,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	425
	.byte	26,0,2,35,0,0,36
	.byte	'Ifx_SCU_SEICON1_Bits',0,4,245,7,3
	.word	67687
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,4,248,7,16,4,11
	.byte	'AE',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	617
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_SEISR_Bits',0,4,130,8,3
	.word	67878
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,4,133,8,16,4,11
	.byte	'reserved_0',0,2
	.word	617
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_STCON_Bits',0,4,140,8,3
	.word	68056
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,4,143,8,16,4,11
	.byte	'MEM',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM1_Bits',0,4,146,8,3
	.word	68207
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,4,149,8,16,4,11
	.byte	'MEM',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM2_Bits',0,4,152,8,3
	.word	68279
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,4,155,8,16,4,11
	.byte	'MEM',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM3_Bits',0,4,158,8,3
	.word	68351
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,4,161,8,16,4,11
	.byte	'MEM',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM4_Bits',0,4,164,8,3
	.word	68423
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,4,167,8,16,4,11
	.byte	'MEM',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM5_Bits',0,4,170,8,3
	.word	68495
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,4,173,8,16,4,11
	.byte	'MEM',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM6_Bits',0,4,176,8,3
	.word	68567
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,179,8,16,4,11
	.byte	'HWCFG',0,1
	.word	600
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	600
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	600
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	600
	.byte	4,0,2,35,3,0,36
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,195,8,3
	.word	68639
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,4,198,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	617
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,4,203,8,3
	.word	68968
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,206,8,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,213,8,3
	.word	69088
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,216,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	600
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	600
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,228,8,3
	.word	69258
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,4,231,8,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	617
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	600
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	600
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	600
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	600
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	600
	.byte	2,0,2,35,3,0,36
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,4,244,8,3
	.word	69521
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,4,247,8,16,4,11
	.byte	'K2DIV',0,1
	.word	600
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	425
	.byte	29,0,2,35,0,0,36
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,4,251,8,3
	.word	69800
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,4,254,8,16,4,11
	.byte	'MODCFG',0,2
	.word	617
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,4,130,9,3
	.word	69904
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,4,133,9,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	600
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	425
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,4,143,9,3
	.word	70010
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,146,9,16,4,11
	.byte	'ESR0T',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	425
	.byte	28,0,2,35,0,0,36
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,153,9,3
	.word	70233
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,4,156,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	600
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	600
	.byte	4,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	600
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	600
	.byte	4,0,2,35,3,0,36
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,4,175,9,3
	.word	70381
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,4,178,9,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	600
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	600
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,4,185,9,3
	.word	70808
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,188,9,16,4,11
	.byte	'ESR0T',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	425
	.byte	28,0,2,35,0,0,36
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,195,9,3
	.word	70981
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,198,9,16,4,11
	.byte	'ESR0T',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	425
	.byte	28,0,2,35,0,0,36
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,205,9,3
	.word	71129
	.byte	36
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,214,9,3
	.word	464
	.byte	36
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,230,9,3
	.word	639
	.byte	36
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,246,9,3
	.word	905
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,249,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	448
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,255,9,3
	.word	71379
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,130,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	600
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,143,10,3
	.word	71505
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,146,10,16,4,11
	.byte	'AE',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	600
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,159,10,3
	.word	71757
	.byte	12,4,167,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52760
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_ACCEN00',0,4,172,10,3
	.word	71976
	.byte	12,4,175,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53319
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_ACCEN01',0,4,180,10,3
	.word	72041
	.byte	12,4,183,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53398
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_ACCEN10',0,4,188,10,3
	.word	72106
	.byte	12,4,191,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53958
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_ACCEN11',0,4,196,10,3
	.word	72171
	.byte	12,4,199,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54039
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_ARSTDIS',0,4,204,10,3
	.word	72236
	.byte	12,4,207,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54265
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON0',0,4,212,10,3
	.word	72301
	.byte	12,4,215,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54538
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON1',0,4,220,10,3
	.word	72366
	.byte	12,4,223,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54864
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON2',0,4,228,10,3
	.word	72431
	.byte	12,4,231,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55142
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON3',0,4,236,10,3
	.word	72496
	.byte	12,4,239,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55511
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON4',0,4,244,10,3
	.word	72561
	.byte	12,4,247,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55691
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON5',0,4,252,10,3
	.word	72626
	.byte	12,4,255,10,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55863
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON6',0,4,132,11,3
	.word	72691
	.byte	12,4,135,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55963
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON7',0,4,140,11,3
	.word	72756
	.byte	12,4,143,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56063
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CCUCON8',0,4,148,11,3
	.word	72821
	.byte	12,4,151,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56163
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_CHIPID',0,4,156,11,3
	.word	72886
	.byte	12,4,159,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56366
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_DTSCLIM',0,4,164,11,3
	.word	72950
	.byte	12,4,167,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56598
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_DTSCSTAT',0,4,172,11,3
	.word	73015
	.byte	12,4,175,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56700
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_EICON0',0,4,180,11,3
	.word	73081
	.byte	12,4,183,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56828
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_EICON1',0,4,188,11,3
	.word	73145
	.byte	12,4,191,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57017
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_EICR',0,4,196,11,3
	.word	73209
	.byte	12,4,199,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57381
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_EIFILT',0,4,204,11,3
	.word	73271
	.byte	12,4,207,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57820
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_EIFR',0,4,212,11,3
	.word	73335
	.byte	12,4,215,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58031
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_EISR',0,4,220,11,3
	.word	73397
	.byte	12,4,223,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58207
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_EMSR',0,4,228,11,3
	.word	73459
	.byte	12,4,231,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58401
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_EMSSW',0,4,236,11,3
	.word	73521
	.byte	12,4,239,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58536
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,4,244,11,3
	.word	73584
	.byte	12,4,247,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58672
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_ESROCFG',0,4,252,11,3
	.word	73657
	.byte	12,4,255,11,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58783
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_EXTCON',0,4,132,12,3
	.word	73722
	.byte	12,4,135,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59001
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_FDR',0,4,140,12,3
	.word	73786
	.byte	12,4,143,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59164
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_FMR',0,4,148,12,3
	.word	73847
	.byte	12,4,151,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59500
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_ID',0,4,156,12,3
	.word	73908
	.byte	12,4,159,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59607
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_IGCR',0,4,164,12,3
	.word	73968
	.byte	12,4,167,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60059
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_IN',0,4,172,12,3
	.word	74030
	.byte	12,4,175,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60158
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_IOCR',0,4,180,12,3
	.word	74090
	.byte	12,4,183,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60308
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,188,12,3
	.word	74152
	.byte	12,4,191,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60546
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,196,12,3
	.word	74220
	.byte	12,4,199,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60707
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,204,12,3
	.word	74288
	.byte	12,4,207,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60813
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_LBISTCTRL3',0,4,212,12,3
	.word	74356
	.byte	12,4,215,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60899
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_LCLCON0',0,4,220,12,3
	.word	74424
	.byte	12,4,223,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61080
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_LCLCON1',0,4,228,12,3
	.word	74489
	.byte	12,4,231,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61261
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_LCLTEST',0,4,236,12,3
	.word	74554
	.byte	12,4,239,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61605
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_MANID',0,4,244,12,3
	.word	74619
	.byte	12,4,247,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61716
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_OMR',0,4,252,12,3
	.word	74682
	.byte	12,4,255,12,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61874
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_OSCCON',0,4,132,13,3
	.word	74743
	.byte	12,4,135,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62285
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_OUT',0,4,140,13,3
	.word	74807
	.byte	12,4,143,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62386
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_OVCCON',0,4,148,13,3
	.word	74868
	.byte	12,4,151,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62719
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_OVCENABLE',0,4,156,13,3
	.word	74932
	.byte	12,4,159,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62921
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PDISC',0,4,164,13,3
	.word	74999
	.byte	12,4,167,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63032
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PDR',0,4,172,13,3
	.word	75062
	.byte	12,4,175,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63165
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PDRR',0,4,180,13,3
	.word	75123
	.byte	12,4,183,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63368
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PERPLLCON0',0,4,188,13,3
	.word	75185
	.byte	12,4,191,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63608
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PERPLLCON1',0,4,196,13,3
	.word	75253
	.byte	12,4,199,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63752
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PERPLLSTAT',0,4,204,13,3
	.word	75321
	.byte	12,4,207,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63974
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR0',0,4,212,13,3
	.word	75389
	.byte	12,4,215,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64110
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR1',0,4,220,13,3
	.word	75453
	.byte	12,4,223,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64246
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR2',0,4,228,13,3
	.word	75517
	.byte	12,4,231,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64382
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR3',0,4,236,13,3
	.word	75581
	.byte	12,4,239,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64518
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR4',0,4,244,13,3
	.word	75645
	.byte	12,4,247,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64654
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMCSR5',0,4,252,13,3
	.word	75709
	.byte	12,4,255,13,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64790
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMSTAT0',0,4,132,14,3
	.word	75773
	.byte	12,4,135,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65062
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMSWCR1',0,4,140,14,3
	.word	75838
	.byte	12,4,143,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65307
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMTRCSR0',0,4,148,14,3
	.word	75903
	.byte	12,4,151,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65695
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMTRCSR1',0,4,156,14,3
	.word	75969
	.byte	12,4,159,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65813
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMTRCSR2',0,4,164,14,3
	.word	76035
	.byte	12,4,167,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66056
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_PMTRCSR3',0,4,172,14,3
	.word	76101
	.byte	12,4,175,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66323
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_RSTCON',0,4,180,14,3
	.word	76167
	.byte	12,4,183,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66603
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_RSTCON2',0,4,188,14,3
	.word	76231
	.byte	12,4,191,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66908
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_RSTCON3',0,4,196,14,3
	.word	76296
	.byte	12,4,199,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66989
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_RSTSTAT',0,4,204,14,3
	.word	76361
	.byte	12,4,207,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67557
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SEICON0',0,4,212,14,3
	.word	76426
	.byte	12,4,215,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67687
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SEICON1',0,4,220,14,3
	.word	76491
	.byte	12,4,223,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67878
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SEISR',0,4,228,14,3
	.word	76556
	.byte	12,4,231,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68056
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_STCON',0,4,236,14,3
	.word	76619
	.byte	12,4,239,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68207
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM1',0,4,244,14,3
	.word	76682
	.byte	12,4,247,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68279
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM2',0,4,252,14,3
	.word	76746
	.byte	12,4,255,14,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68351
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM3',0,4,132,15,3
	.word	76810
	.byte	12,4,135,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68423
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM4',0,4,140,15,3
	.word	76874
	.byte	12,4,143,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68495
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM5',0,4,148,15,3
	.word	76938
	.byte	12,4,151,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68567
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_STMEM6',0,4,156,15,3
	.word	77002
	.byte	12,4,159,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68639
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_STSTAT',0,4,164,15,3
	.word	77066
	.byte	12,4,167,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68968
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SWAPCTRL',0,4,172,15,3
	.word	77130
	.byte	12,4,175,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69088
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SWRSTCON',0,4,180,15,3
	.word	77196
	.byte	12,4,183,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69258
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SYSCON',0,4,188,15,3
	.word	77262
	.byte	12,4,191,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69521
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SYSPLLCON0',0,4,196,15,3
	.word	77326
	.byte	12,4,199,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69800
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SYSPLLCON1',0,4,204,15,3
	.word	77394
	.byte	12,4,207,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69904
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SYSPLLCON2',0,4,212,15,3
	.word	77462
	.byte	12,4,215,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70010
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_SYSPLLSTAT',0,4,220,15,3
	.word	77530
	.byte	12,4,223,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70233
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_TRAPCLR',0,4,228,15,3
	.word	77598
	.byte	12,4,231,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70381
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_TRAPDIS0',0,4,236,15,3
	.word	77663
	.byte	12,4,239,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70808
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_TRAPDIS1',0,4,244,15,3
	.word	77729
	.byte	12,4,247,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70981
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_TRAPSET',0,4,252,15,3
	.word	77795
	.byte	12,4,255,15,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71129
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_TRAPSTAT',0,4,132,16,3
	.word	77860
	.byte	36
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,140,16,3
	.word	560
	.byte	36
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,148,16,3
	.word	865
	.byte	36
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,156,16,3
	.word	1096
	.byte	12,4,159,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71379
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_WDTS_CON0',0,4,164,16,3
	.word	78011
	.byte	12,4,167,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71505
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_WDTS_CON1',0,4,172,16,3
	.word	78078
	.byte	12,4,175,16,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71757
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SCU_WDTS_SR',0,4,180,16,3
	.word	78145
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,4,192,16,25,4,13
	.byte	'ESRCFGX',0
	.word	73584
	.byte	4,2,35,0,0,14
	.word	78210
	.byte	36
	.byte	'Ifx_SCU_ESRCFGX',0,4,195,16,3
	.word	78251
	.byte	14
	.word	1136
	.byte	36
	.byte	'Ifx_SCU_WDTCPU',0,4,215,16,3
	.word	78281
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,230,16,25,12,13
	.byte	'CON0',0
	.word	78011
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	78078
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	78145
	.byte	4,2,35,8,0,14
	.word	78310
	.byte	36
	.byte	'Ifx_SCU_WDTS',0,4,235,16,3
	.word	78371
	.byte	15,8
	.word	78210
	.byte	16,1,0,14
	.word	78398
	.byte	15,20
	.word	600
	.byte	16,19,0,15,36
	.word	600
	.byte	16,35,0,15,16
	.word	73209
	.byte	16,3,0,15,16
	.word	73968
	.byte	16,3,0,15,36
	.word	1136
	.byte	16,2,0,14
	.word	78448
	.byte	15,44
	.word	600
	.byte	16,43,0,14
	.word	78310
	.byte	15,176,2
	.word	600
	.byte	16,175,2,0,10
	.byte	'_Ifx_SCU',0,4,250,16,25,128,8,13
	.byte	'reserved_0',0
	.word	4441
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	73908
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2621
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	74743
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	77530
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	77326
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	77394
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	77462
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	75321
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	75185
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	75253
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	72301
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	72366
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	73786
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	73722
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	72431
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	72496
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	72561
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	72626
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	76361
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2621
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	76167
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	72236
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	77196
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	76231
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	76296
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	2621
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	78407
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	73657
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	77262
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	72691
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	72756
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	72821
	.byte	4,3,35,136,1,13
	.byte	'reserved_8C',0
	.word	42566
	.byte	16,3,35,140,1,13
	.byte	'PDR',0
	.word	75062
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	74090
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	74807
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	74682
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	74030
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	42566
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	77066
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	76619
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	75389
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	75453
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	75517
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	75581
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	75645
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	75709
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	2621
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	75773
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	75838
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	42566
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	73459
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	73521
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	73015
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	72950
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	78412
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	77729
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	77860
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	77795
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	77598
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	77663
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	74424
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	74489
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	74554
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	72886
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	74619
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	2621
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	77130
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	78412
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	74152
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	74220
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	74288
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	74356
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	42566
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	76682
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	76746
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	74999
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4441
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	75903
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	75969
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	76035
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	76101
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	3812
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	76810
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	76874
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	76938
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	77002
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	42566
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	74932
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	74868
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	78421
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	73271
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	78430
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	73335
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	73847
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	75123
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	78439
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	42566
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	78457
	.byte	36,3,35,204,4,13
	.byte	'reserved_270',0
	.word	78462
	.byte	44,3,35,240,4,13
	.byte	'EICON0',0
	.word	73081
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	73145
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	73397
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	78471
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	76426
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	76491
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	76556
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	78476
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	72171
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	72106
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	72041
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	71976
	.byte	4,3,35,252,7,0,14
	.word	78487
	.byte	36
	.byte	'Ifx_SCU',0,4,237,17,3
	.word	80552
	.byte	36
	.byte	'Ifx_STM_ACCEN0_Bits',0,13,102,3
	.word	12766
	.byte	36
	.byte	'Ifx_STM_ACCEN1_Bits',0,13,108,3
	.word	12677
	.byte	36
	.byte	'Ifx_STM_CAP_Bits',0,13,114,3
	.word	11180
	.byte	36
	.byte	'Ifx_STM_CAPSV_Bits',0,13,120,3
	.word	12061
	.byte	36
	.byte	'Ifx_STM_CLC_Bits',0,13,130,1,3
	.word	10299
	.byte	36
	.byte	'Ifx_STM_CMCON_Bits',0,13,143,1,3
	.word	11360
	.byte	36
	.byte	'Ifx_STM_CMP_Bits',0,13,149,1,3
	.word	11268
	.byte	36
	.byte	'Ifx_STM_ICR_Bits',0,13,162,1,3
	.word	11592
	.byte	36
	.byte	'Ifx_STM_ID_Bits',0,13,170,1,3
	.word	10455
	.byte	36
	.byte	'Ifx_STM_ISCR_Bits',0,13,180,1,3
	.word	11809
	.byte	36
	.byte	'Ifx_STM_KRST0_Bits',0,13,188,1,3
	.word	12554
	.byte	36
	.byte	'Ifx_STM_KRST1_Bits',0,13,195,1,3
	.word	12450
	.byte	36
	.byte	'Ifx_STM_KRSTCLR_Bits',0,13,202,1,3
	.word	12344
	.byte	36
	.byte	'Ifx_STM_OCS_Bits',0,13,213,1,3
	.word	12162
	.byte	36
	.byte	'Ifx_STM_TIM0_Bits',0,13,219,1,3
	.word	10574
	.byte	36
	.byte	'Ifx_STM_TIM0SV_Bits',0,13,225,1,3
	.word	11973
	.byte	36
	.byte	'Ifx_STM_TIM1_Bits',0,13,231,1,3
	.word	10660
	.byte	36
	.byte	'Ifx_STM_TIM2_Bits',0,13,237,1,3
	.word	10746
	.byte	36
	.byte	'Ifx_STM_TIM3_Bits',0,13,243,1,3
	.word	10832
	.byte	36
	.byte	'Ifx_STM_TIM4_Bits',0,13,249,1,3
	.word	10919
	.byte	36
	.byte	'Ifx_STM_TIM5_Bits',0,13,255,1,3
	.word	11006
	.byte	36
	.byte	'Ifx_STM_TIM6_Bits',0,13,133,2,3
	.word	11093
	.byte	36
	.byte	'Ifx_STM_ACCEN0',0,13,146,2,3
	.word	13295
	.byte	36
	.byte	'Ifx_STM_ACCEN1',0,13,154,2,3
	.word	12726
	.byte	36
	.byte	'Ifx_STM_CAP',0,13,162,2,3
	.word	11228
	.byte	36
	.byte	'Ifx_STM_CAPSV',0,13,170,2,3
	.word	12111
	.byte	36
	.byte	'Ifx_STM_CLC',0,13,178,2,3
	.word	10415
	.byte	36
	.byte	'Ifx_STM_CMCON',0,13,186,2,3
	.word	11552
	.byte	36
	.byte	'Ifx_STM_CMP',0,13,194,2,3
	.word	11311
	.byte	36
	.byte	'Ifx_STM_ICR',0,13,202,2,3
	.word	11769
	.byte	36
	.byte	'Ifx_STM_ID',0,13,210,2,3
	.word	10534
	.byte	36
	.byte	'Ifx_STM_ISCR',0,13,218,2,3
	.word	11933
	.byte	36
	.byte	'Ifx_STM_KRST0',0,13,226,2,3
	.word	12637
	.byte	36
	.byte	'Ifx_STM_KRST1',0,13,234,2,3
	.word	12514
	.byte	36
	.byte	'Ifx_STM_KRSTCLR',0,13,242,2,3
	.word	12410
	.byte	36
	.byte	'Ifx_STM_OCS',0,13,250,2,3
	.word	12304
	.byte	36
	.byte	'Ifx_STM_TIM0',0,13,130,3,3
	.word	10620
	.byte	36
	.byte	'Ifx_STM_TIM0SV',0,13,138,3,3
	.word	12021
	.byte	36
	.byte	'Ifx_STM_TIM1',0,13,146,3,3
	.word	10706
	.byte	36
	.byte	'Ifx_STM_TIM2',0,13,154,3,3
	.word	10792
	.byte	36
	.byte	'Ifx_STM_TIM3',0,13,162,3,3
	.word	10879
	.byte	36
	.byte	'Ifx_STM_TIM4',0,13,170,3,3
	.word	10966
	.byte	36
	.byte	'Ifx_STM_TIM5',0,13,178,3,3
	.word	11053
	.byte	36
	.byte	'Ifx_STM_TIM6',0,13,186,3,3
	.word	11140
	.byte	14
	.word	13335
	.byte	36
	.byte	'Ifx_STM',0,13,226,3,3
	.word	81660
	.byte	17,21,254,9,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,36
	.byte	'IfxScu_WDTCON1_IR',0,21,131,10,3
	.word	81682
	.byte	36
	.byte	'Ifx_P_ACCEN0_Bits',0,6,102,3
	.word	7969
	.byte	36
	.byte	'Ifx_P_ACCEN1_Bits',0,6,108,3
	.word	7882
	.byte	36
	.byte	'Ifx_P_ESR_Bits',0,6,130,1,3
	.word	4450
	.byte	36
	.byte	'Ifx_P_ID_Bits',0,6,138,1,3
	.word	2501
	.byte	36
	.byte	'Ifx_P_IN_Bits',0,6,160,1,3
	.word	3497
	.byte	36
	.byte	'Ifx_P_IOCR0_Bits',0,6,173,1,3
	.word	2630
	.byte	36
	.byte	'Ifx_P_IOCR12_Bits',0,6,186,1,3
	.word	3277
	.byte	36
	.byte	'Ifx_P_IOCR4_Bits',0,6,199,1,3
	.word	2845
	.byte	36
	.byte	'Ifx_P_IOCR8_Bits',0,6,212,1,3
	.word	3060
	.byte	36
	.byte	'Ifx_P_LPCR_Bits',0,6,231,1,3
	.word	7544
	.byte	36
	.byte	'Ifx_P_OMCR_Bits',0,6,253,1,3
	.word	7196
	.byte	36
	.byte	'Ifx_P_OMCR0_Bits',0,6,136,2,3
	.word	6183
	.byte	36
	.byte	'Ifx_P_OMCR12_Bits',0,6,146,2,3
	.word	6707
	.byte	36
	.byte	'Ifx_P_OMCR4_Bits',0,6,157,2,3
	.word	6357
	.byte	36
	.byte	'Ifx_P_OMCR8_Bits',0,6,168,2,3
	.word	6531
	.byte	36
	.byte	'Ifx_P_OMR_Bits',0,6,205,2,3
	.word	1930
	.byte	36
	.byte	'Ifx_P_OMSR_Bits',0,6,227,2,3
	.word	6863
	.byte	36
	.byte	'Ifx_P_OMSR0_Bits',0,6,237,2,3
	.word	5520
	.byte	36
	.byte	'Ifx_P_OMSR12_Bits',0,6,248,2,3
	.word	6008
	.byte	36
	.byte	'Ifx_P_OMSR4_Bits',0,6,131,3,3
	.word	5667
	.byte	36
	.byte	'Ifx_P_OMSR8_Bits',0,6,142,3,3
	.word	5836
	.byte	36
	.byte	'Ifx_P_OUT_Bits',0,6,164,3,3
	.word	1614
	.byte	36
	.byte	'Ifx_P_PCSR_Bits',0,6,187,3,3
	.word	5156
	.byte	36
	.byte	'Ifx_P_PDISC_Bits',0,6,209,3,3
	.word	4790
	.byte	36
	.byte	'Ifx_P_PDR0_Bits',0,6,230,3,3
	.word	3821
	.byte	36
	.byte	'Ifx_P_PDR1_Bits',0,6,251,3,3
	.word	4125
	.byte	36
	.byte	'Ifx_P_ACCEN0',0,6,136,4,3
	.word	8496
	.byte	36
	.byte	'Ifx_P_ACCEN1',0,6,144,4,3
	.word	7929
	.byte	36
	.byte	'Ifx_P_ESR',0,6,152,4,3
	.word	4741
	.byte	36
	.byte	'Ifx_P_ID',0,6,160,4,3
	.word	2581
	.byte	36
	.byte	'Ifx_P_IN',0,6,168,4,3
	.word	3772
	.byte	36
	.byte	'Ifx_P_IOCR0',0,6,176,4,3
	.word	2805
	.byte	36
	.byte	'Ifx_P_IOCR12',0,6,184,4,3
	.word	3457
	.byte	36
	.byte	'Ifx_P_IOCR4',0,6,192,4,3
	.word	3020
	.byte	36
	.byte	'Ifx_P_IOCR8',0,6,200,4,3
	.word	3237
	.byte	36
	.byte	'Ifx_P_LPCR',0,6,208,4,3
	.word	7824
	.byte	36
	.byte	'Ifx_P_OMCR',0,6,216,4,3
	.word	7504
	.byte	36
	.byte	'Ifx_P_OMCR0',0,6,224,4,3
	.word	6317
	.byte	36
	.byte	'Ifx_P_OMCR12',0,6,232,4,3
	.word	6823
	.byte	36
	.byte	'Ifx_P_OMCR4',0,6,240,4,3
	.word	6491
	.byte	36
	.byte	'Ifx_P_OMCR8',0,6,248,4,3
	.word	6667
	.byte	36
	.byte	'Ifx_P_OMR',0,6,128,5,3
	.word	2461
	.byte	36
	.byte	'Ifx_P_OMSR',0,6,136,5,3
	.word	7156
	.byte	36
	.byte	'Ifx_P_OMSR0',0,6,144,5,3
	.word	5627
	.byte	36
	.byte	'Ifx_P_OMSR12',0,6,152,5,3
	.word	6143
	.byte	36
	.byte	'Ifx_P_OMSR4',0,6,160,5,3
	.word	5796
	.byte	36
	.byte	'Ifx_P_OMSR8',0,6,168,5,3
	.word	5968
	.byte	36
	.byte	'Ifx_P_OUT',0,6,176,5,3
	.word	1890
	.byte	36
	.byte	'Ifx_P_PCSR',0,6,184,5,3
	.word	5480
	.byte	36
	.byte	'Ifx_P_PDISC',0,6,192,5,3
	.word	5116
	.byte	36
	.byte	'Ifx_P_PDR0',0,6,200,5,3
	.word	4085
	.byte	36
	.byte	'Ifx_P_PDR1',0,6,208,5,3
	.word	4401
	.byte	14
	.word	8536
	.byte	36
	.byte	'Ifx_P',0,6,128,6,3
	.word	82998
	.byte	17,5,73,9,1,18
	.byte	'IfxPort_ControlledBy_port',0,0,18
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,36
	.byte	'IfxPort_ControlledBy',0,5,77,3
	.word	83018
	.byte	17,5,81,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,36
	.byte	'IfxPort_InputMode',0,5,87,3
	.word	83109
	.byte	17,5,91,9,1,18
	.byte	'IfxPort_LvdsMode_high',0,0,18
	.byte	'IfxPort_LvdsMode_medium',0,1,0,36
	.byte	'IfxPort_LvdsMode',0,5,95,3
	.word	83260
	.byte	17,5,126,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,36
	.byte	'IfxPort_OutputIdx',0,5,136,1,3
	.word	83341
	.byte	17,5,140,1,9,1,18
	.byte	'IfxPort_OutputMode_none',0,0,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,36
	.byte	'IfxPort_OutputMode',0,5,145,1,3
	.word	83585
	.byte	17,5,151,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,18
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,36
	.byte	'IfxPort_PadDriver',0,5,165,1,3
	.word	83709
	.byte	17,5,169,1,9,1,18
	.byte	'IfxPort_PadSupply_3v',0,0,18
	.byte	'IfxPort_PadSupply_5v',0,1,0,36
	.byte	'IfxPort_PadSupply',0,5,173,1,3
	.word	84159
	.byte	17,5,177,1,9,1,18
	.byte	'IfxPort_PinFunctionMode_digital',0,0,18
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,36
	.byte	'IfxPort_PinFunctionMode',0,5,181,1,3
	.word	84239
	.byte	36
	.byte	'IfxPort_State',0,5,193,1,3
	.word	9116
	.byte	38,5,246,1,9,8,13
	.byte	'port',0
	.word	9111
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	600
	.byte	1,2,35,4,0,36
	.byte	'IfxPort_Pin',0,5,250,1,3
	.word	84369
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,22,68,16,4,11
	.byte	'EN0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SMU_ACCEN0_Bits',0,22,102,3
	.word	84429
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,22,105,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_SMU_ACCEN1_Bits',0,22,108,3
	.word	84986
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,22,111,16,4,11
	.byte	'DF0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SMU_AD_Bits',0,22,145,1,3
	.word	85063
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,22,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	600
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	600
	.byte	4,0,2,35,3,0,36
	.byte	'Ifx_SMU_AEX_Bits',0,22,176,1,3
	.word	85613
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,22,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_SMU_AEXCLR_Bits',0,22,207,1,3
	.word	86170
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,22,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	600
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	617
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	617
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_SMU_AFCNT_Bits',0,22,217,1,3
	.word	86766
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,22,220,1,16,4,11
	.byte	'SF0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_SMU_AG_Bits',0,22,254,1,3
	.word	86906
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,22,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	448
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	448
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	448
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	448
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	448
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	448
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	448
	.byte	2,0,2,35,0,0,36
	.byte	'Ifx_SMU_AGC_Bits',0,22,142,2,3
	.word	87457
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,22,145,2,16,4,11
	.byte	'CF0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_SMU_AGCF_Bits',0,22,179,2,3
	.word	87719
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,22,182,2,16,4,11
	.byte	'FE0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_SMU_AGFSP_Bits',0,22,216,2,3
	.word	88274
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,22,219,2,16,4,11
	.byte	'DISR',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	425
	.byte	28,0,2,35,0,0,36
	.byte	'Ifx_SMU_CLC_Bits',0,22,226,2,3
	.word	88831
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,22,229,2,16,4,11
	.byte	'CMD',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_SMU_CMD_Bits',0,22,234,2,3
	.word	88974
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,22,237,2,16,4,11
	.byte	'SSM',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	425
	.byte	30,0,2,35,0,0,36
	.byte	'Ifx_SMU_DBG_Bits',0,22,241,2,3
	.word	89077
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,22,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	448
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	448
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	448
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	448
	.byte	10,0,2,35,0,0,36
	.byte	'Ifx_SMU_FSP_Bits',0,22,252,2,3
	.word	89165
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,22,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	600
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	600
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_SMU_ID_Bits',0,22,132,3,3
	.word	89320
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,22,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	448
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	448
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_SMU_KEYS_Bits',0,22,140,3,3
	.word	89430
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,22,143,3,16,4,11
	.byte	'TGS',0,1
	.word	600
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	425
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	600
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	600
	.byte	2,0,2,35,3,0,36
	.byte	'Ifx_SMU_OCS_Bits',0,22,153,3,3
	.word	89542
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,22,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	448
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	448
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	448
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	448
	.byte	9,0,2,35,0,0,36
	.byte	'Ifx_SMU_PCTL_Bits',0,22,167,3,3
	.word	89734
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,22,170,3,16,4,11
	.byte	'TE0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_SMU_RMCTL_Bits',0,22,204,3,3
	.word	89965
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,22,207,3,16,4,11
	.byte	'EF0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_SMU_RMEF_Bits',0,22,241,3,3
	.word	90669
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,22,244,3,16,4,11
	.byte	'STS0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_SMU_RMSTS_Bits',0,22,150,4,3
	.word	91371
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,22,153,4,16,4,11
	.byte	'GID0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	448
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	448
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	448
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	7,0,2,35,0,0,36
	.byte	'Ifx_SMU_RTAC00_Bits',0,22,161,4,3
	.word	92086
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,22,164,4,16,4,11
	.byte	'GID2',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	448
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	448
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	448
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	7,0,2,35,0,0,36
	.byte	'Ifx_SMU_RTAC01_Bits',0,22,172,4,3
	.word	92254
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,22,175,4,16,4,11
	.byte	'GID0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	448
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	448
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	448
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	7,0,2,35,0,0,36
	.byte	'Ifx_SMU_RTAC10_Bits',0,22,183,4,3
	.word	92422
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,22,186,4,16,4,11
	.byte	'GID2',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	448
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	448
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	448
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	448
	.byte	7,0,2,35,0,0,36
	.byte	'Ifx_SMU_RTAC11_Bits',0,22,194,4,3
	.word	92590
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,22,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	448
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	448
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_SMU_RTC_Bits',0,22,203,4,3
	.word	92758
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,22,206,4,16,4,11
	.byte	'CMD',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	448
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	448
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	12,0,2,35,0,0,36
	.byte	'Ifx_SMU_STS_Bits',0,22,220,4,3
	.word	92878
	.byte	12,22,228,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84429
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_ACCEN0',0,22,233,4,3
	.word	93133
	.byte	12,22,236,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	84986
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_ACCEN1',0,22,241,4,3
	.word	93197
	.byte	12,22,244,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85063
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_AD',0,22,249,4,3
	.word	93261
	.byte	12,22,252,4,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	85613
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_AEX',0,22,129,5,3
	.word	93321
	.byte	12,22,132,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86170
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_AEXCLR',0,22,137,5,3
	.word	93382
	.byte	12,22,140,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86766
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_AFCNT',0,22,145,5,3
	.word	93446
	.byte	12,22,148,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	86906
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_AG',0,22,153,5,3
	.word	93509
	.byte	12,22,156,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87457
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_AGC',0,22,161,5,3
	.word	93569
	.byte	12,22,164,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	87719
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_AGCF',0,22,169,5,3
	.word	93630
	.byte	12,22,172,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88274
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_AGFSP',0,22,177,5,3
	.word	93692
	.byte	12,22,180,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88831
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_CLC',0,22,185,5,3
	.word	93755
	.byte	12,22,188,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	88974
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_CMD',0,22,193,5,3
	.word	93816
	.byte	12,22,196,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89077
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_DBG',0,22,201,5,3
	.word	93877
	.byte	12,22,204,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89165
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_FSP',0,22,209,5,3
	.word	93938
	.byte	12,22,212,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89320
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_ID',0,22,217,5,3
	.word	93999
	.byte	12,22,220,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89430
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_KEYS',0,22,225,5,3
	.word	94059
	.byte	12,22,228,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89542
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_OCS',0,22,233,5,3
	.word	94121
	.byte	12,22,236,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89734
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_PCTL',0,22,241,5,3
	.word	94182
	.byte	12,22,244,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	89965
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_RMCTL',0,22,249,5,3
	.word	94244
	.byte	12,22,252,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	90669
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_RMEF',0,22,129,6,3
	.word	94307
	.byte	12,22,132,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	91371
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_RMSTS',0,22,137,6,3
	.word	94369
	.byte	12,22,140,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92086
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_RTAC00',0,22,145,6,3
	.word	94432
	.byte	12,22,148,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92254
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_RTAC01',0,22,153,6,3
	.word	94496
	.byte	12,22,156,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92422
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_RTAC10',0,22,161,6,3
	.word	94560
	.byte	12,22,164,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92590
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_RTAC11',0,22,169,6,3
	.word	94624
	.byte	12,22,172,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92758
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_RTC',0,22,177,6,3
	.word	94688
	.byte	12,22,180,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	92878
	.byte	4,2,35,0,0,36
	.byte	'Ifx_SMU_STS',0,22,185,6,3
	.word	94749
	.byte	17,7,210,2,9,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,18
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,36
	.byte	'IfxScuCcu_LowPowerDivRatio',0,7,216,2,3
	.word	94810
	.byte	17,7,220,2,9,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,18
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,18
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,18
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,36
	.byte	'IfxScuCcu_ModulationAmplitude',0,7,229,2,3
	.word	95003
	.byte	17,7,254,3,9,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,18
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,18
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,36
	.byte	'IfxScuCcu_PllInputClockSelection',0,7,131,4,3
	.word	95304
	.byte	17,7,135,4,9,1,18
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,18
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,18
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,18
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,36
	.byte	'IfxScuCcu_Traprequest',0,7,141,4,3
	.word	95478
	.byte	17,7,147,4,9,1,18
	.byte	'IfxScuCcu_ModEn_disabled',0,0,18
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,36
	.byte	'IfxScuCcu_ModEn',0,7,151,4,3
	.word	95632
	.byte	38,7,162,4,9,6,13
	.byte	'pDivider',0
	.word	600
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	600
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	600
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	600
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	600
	.byte	1,2,35,4,0,36
	.byte	'IfxScuCcu_PerPllConfig',0,7,171,4,3
	.word	95717
	.byte	38,7,176,4,9,4,13
	.byte	'pDivider',0
	.word	600
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	600
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	600
	.byte	1,2,35,2,0,36
	.byte	'IfxScuCcu_SysPllConfig',0,7,181,4,3
	.word	95855
	.byte	38,7,189,4,9,8,13
	.byte	'value',0
	.word	9686
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9686
	.byte	4,2,35,4,0,36
	.byte	'IfxScuCcu_CcuconRegConfig',0,7,193,4,3
	.word	95949
	.byte	38,7,197,4,9,6,13
	.byte	'k2Step',0
	.word	600
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	221
	.byte	4,2,35,2,0,36
	.byte	'IfxScuCcu_PllStepConfig',0,7,201,4,3
	.word	96020
	.byte	38,7,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	9686
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	95304
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	95855
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	95717
	.byte	6,2,35,10,0,36
	.byte	'IfxScuCcu_pllsParameterConfig',0,7,211,4,3
	.word	96094
	.byte	38,7,219,4,9,8,13
	.byte	'value',0
	.word	9686
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	9686
	.byte	4,2,35,4,0,36
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,7,223,4,3
	.word	96239
	.byte	38,7,231,4,9,56,13
	.byte	'ccucon0',0
	.word	95949
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	95949
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	95949
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	95949
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	95949
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	95949
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	95949
	.byte	8,2,35,48,0,36
	.byte	'IfxScuCcu_ClockDistributionConfig',0,7,240,4,3
	.word	96315
	.byte	38,7,244,4,9,20,13
	.byte	'pllsParameters',0
	.word	96094
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	221
	.byte	4,2,35,16,0,36
	.byte	'IfxScuCcu_InitialStepConfig',0,7,248,4,3
	.word	96484
	.byte	20
	.word	96020
	.byte	3
	.word	96570
	.byte	38,7,252,4,9,8,13
	.byte	'numOfSteps',0
	.word	600
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	96575
	.byte	4,2,35,4,0,36
	.byte	'IfxScuCcu_PllThrottleConfig',0,7,128,5,3
	.word	96580
	.byte	38,7,134,5,9,2,13
	.byte	'Mod_Enable',0
	.word	95632
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	95003
	.byte	1,2,35,1,0,36
	.byte	'IfxScuCcu_Mod_Config',0,7,138,5,3
	.word	96662
	.byte	36
	.byte	'IfxCpu_syncEvent',0,8,119,22
	.word	425
	.byte	17,8,141,1,9,1,18
	.byte	'IfxCpu_CounterMode_normal',0,0,18
	.byte	'IfxCpu_CounterMode_task',0,1,0,36
	.byte	'IfxCpu_CounterMode',0,8,145,1,3
	.word	96761
	.byte	38,8,192,1,9,6,13
	.byte	'counter',0
	.word	9686
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	600
	.byte	1,2,35,4,0,36
	.byte	'IfxCpu_Counter',0,8,196,1,3
	.word	96850
	.byte	38,8,204,1,9,32,13
	.byte	'instruction',0
	.word	96850
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	96850
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	96850
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	96850
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	96850
	.byte	6,2,35,24,0,36
	.byte	'IfxCpu_Perf',0,8,211,1,3
	.word	96916
	.byte	17,23,66,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_dma',0,1,18
	.byte	'IfxSrc_Tos_cpu1',0,2,18
	.byte	'IfxSrc_Tos_cpu2',0,3,0,36
	.byte	'IfxSrc_Tos',0,23,72,3
	.word	97034
	.byte	10
	.byte	'_Ifx_CBS_ACCEN0_Bits',0,24,68,16,4,11
	.byte	'EN0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	600
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	600
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	600
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	600
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	600
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	600
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	600
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	600
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	600
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	600
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	600
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_CBS_ACCEN0_Bits',0,24,102,3
	.word	97130
	.byte	10
	.byte	'_Ifx_CBS_ACCEN1_Bits',0,24,105,16,4,11
	.byte	'reserved_0',0,4
	.word	425
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CBS_ACCEN1_Bits',0,24,108,3
	.word	97687
	.byte	10
	.byte	'_Ifx_CBS_COMDATA_Bits',0,24,111,16,4,11
	.byte	'DATA',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CBS_COMDATA_Bits',0,24,114,3
	.word	97764
	.byte	10
	.byte	'_Ifx_CBS_ICTSA_Bits',0,24,117,16,4,11
	.byte	'ADDR',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CBS_ICTSA_Bits',0,24,120,3
	.word	97837
	.byte	10
	.byte	'_Ifx_CBS_ICTTA_Bits',0,24,123,16,4,11
	.byte	'ADDR',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CBS_ICTTA_Bits',0,24,126,3
	.word	97906
	.byte	10
	.byte	'_Ifx_CBS_IFSA_Bits',0,24,129,1,16,4,11
	.byte	'ADDR',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CBS_IFSA_Bits',0,24,132,1,3
	.word	97975
	.byte	10
	.byte	'_Ifx_CBS_IFSC_Bits',0,24,135,1,16,4,11
	.byte	'GO',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'OTGS',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'MODE',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'PRIO',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'RSREP',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'BM0',0,4
	.word	448
	.byte	2,14,2,35,0,11
	.byte	'BM1',0,4
	.word	448
	.byte	2,12,2,35,0,11
	.byte	'BM2',0,4
	.word	448
	.byte	2,10,2,35,0,11
	.byte	'BM3',0,4
	.word	448
	.byte	2,8,2,35,0,11
	.byte	'BM4',0,4
	.word	448
	.byte	2,6,2,35,0,11
	.byte	'BM5',0,4
	.word	448
	.byte	2,4,2,35,0,11
	.byte	'BM6',0,4
	.word	448
	.byte	2,2,2,35,0,11
	.byte	'BM7',0,4
	.word	448
	.byte	2,0,2,35,0,0,36
	.byte	'Ifx_CBS_IFSC_Bits',0,24,152,1,3
	.word	98044
	.byte	10
	.byte	'_Ifx_CBS_INTMOD_Bits',0,24,155,1,16,4,11
	.byte	'SET_CRS',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'SET_CWS',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'SET_CS',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'CLR_CS',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'CHANNEL_P',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'CHANNEL',0,4
	.word	448
	.byte	3,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	8,16,2,35,0,11
	.byte	'SET_INT_MOD',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'SET_INT_TRC',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'CLR_INT_TRC',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'TRC_MOD_P',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'TRC_MOD',0,4
	.word	448
	.byte	2,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'INT_MOD',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'INT_TRC',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	448
	.byte	6,0,2,35,0,0,36
	.byte	'Ifx_CBS_INTMOD_Bits',0,24,174,1,3
	.word	98341
	.byte	10
	.byte	'_Ifx_CBS_IOSR_Bits',0,24,177,1,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'CRSYNC',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'CWSYNC',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'CW_ACK',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'COM_SYNC',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'HOSTED',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	448
	.byte	3,20,2,35,0,11
	.byte	'CHANNEL',0,4
	.word	448
	.byte	3,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	448
	.byte	17,0,2,35,0,0,36
	.byte	'Ifx_CBS_IOSR_Bits',0,24,188,1,3
	.word	98750
	.byte	10
	.byte	'_Ifx_CBS_JDPID_Bits',0,24,191,1,16,4,11
	.byte	'MOD_REV',0,1
	.word	600
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	600
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_CBS_JDPID_Bits',0,24,196,1,3
	.word	98981
	.byte	10
	.byte	'_Ifx_CBS_JTAGID_Bits',0,24,199,1,16,4,11
	.byte	'JTAG_ID',0,4
	.word	448
	.byte	32,0,2,35,0,0,36
	.byte	'Ifx_CBS_JTAGID_Bits',0,24,202,1,3
	.word	99097
	.byte	10
	.byte	'_Ifx_CBS_OCNTRL_Bits',0,24,205,1,16,4,11
	.byte	'OC0_P',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'OC0',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'OC1_P',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'OC1',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'OC2_P',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'OC2',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'OC3_P',0,4
	.word	448
	.byte	1,25,2,35,0,11
	.byte	'OC3',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'OC4_P',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'OC4',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'OC5_P',0,4
	.word	448
	.byte	1,21,2,35,0,11
	.byte	'OC5',0,4
	.word	448
	.byte	1,20,2,35,0,11
	.byte	'WDTSUS_P',0,4
	.word	448
	.byte	1,19,2,35,0,11
	.byte	'WDTSUS',0,4
	.word	448
	.byte	1,18,2,35,0,11
	.byte	'STABLE_P',0,4
	.word	448
	.byte	1,17,2,35,0,11
	.byte	'STABLE',0,4
	.word	448
	.byte	1,16,2,35,0,11
	.byte	'OJC0_P',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'OJC0',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'OJC1_P',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'OJC1',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'OJC2_P',0,4
	.word	448
	.byte	1,11,2,35,0,11
	.byte	'OJC2',0,4
	.word	448
	.byte	1,10,2,35,0,11
	.byte	'OJC3_P',0,4
	.word	448
	.byte	1,9,2,35,0,11
	.byte	'OJC3',0,4
	.word	448
	.byte	1,8,2,35,0,11
	.byte	'OJC4_P',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'OJC4',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'OJC5_P',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'OJC5',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'OJC6_P',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'OJC6',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'OJC7_P',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'OJC7',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CBS_OCNTRL_Bits',0,24,239,1,3
	.word	99173
	.byte	10
	.byte	'_Ifx_CBS_OEC_Bits',0,24,242,1,16,4,11
	.byte	'PAT',0,4
	.word	448
	.byte	8,24,2,35,0,11
	.byte	'DS',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'OCO',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	448
	.byte	6,16,2,35,0,11
	.byte	'IF_LCK_P',0,4
	.word	448
	.byte	1,15,2,35,0,11
	.byte	'IF_LCK',0,4
	.word	448
	.byte	1,14,2,35,0,11
	.byte	'AUT_OK_P',0,4
	.word	448
	.byte	1,13,2,35,0,11
	.byte	'AUT_OK',0,4
	.word	448
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	12,0,2,35,0,0,36
	.byte	'Ifx_CBS_OEC_Bits',0,24,253,1,3
	.word	99770
	.byte	10
	.byte	'_Ifx_CBS_OIFM_Bits',0,24,128,2,16,4,11
	.byte	'DAPMODE',0,4
	.word	448
	.byte	3,29,2,35,0,11
	.byte	'DAPRST',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'F_JTAG',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'N_JTAG',0,4
	.word	448
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	448
	.byte	2,20,2,35,0,11
	.byte	'PADCTL',0,4
	.word	448
	.byte	2,18,2,35,0,11
	.byte	'PADCTLI',0,4
	.word	448
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CBS_OIFM_Bits',0,24,139,2,3
	.word	99987
	.byte	10
	.byte	'_Ifx_CBS_OSTATE_Bits',0,24,142,2,16,4,11
	.byte	'OEN',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'OC0',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'OC1',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'OC2',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'ENIDIS',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'EECTRC',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'EECDIS',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'WDTSUS',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'HARR',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'OJC1',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'OJC2',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'OJC3',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'RSTCL0',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'RSTCL1',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'OJC6',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'RSTCL3',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'IF_LCK',0,1
	.word	600
	.byte	1,7,2,35,2,11
	.byte	'AUT_OK',0,1
	.word	600
	.byte	1,6,2,35,2,11
	.byte	'STABLE',0,1
	.word	600
	.byte	1,5,2,35,2,11
	.byte	'OCO',0,1
	.word	600
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	617
	.byte	12,0,2,35,2,0,36
	.byte	'Ifx_CBS_OSTATE_Bits',0,24,165,2,3
	.word	100218
	.byte	10
	.byte	'_Ifx_CBS_TCCB_Bits',0,24,168,2,16,4,11
	.byte	'C0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'C1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'C2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'C3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'C4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'C5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	425
	.byte	25,1,2,35,0,11
	.byte	'HSM',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_CBS_TCCB_Bits',0,24,178,2,3
	.word	100633
	.byte	10
	.byte	'_Ifx_CBS_TCCH_Bits',0,24,181,2,16,4,11
	.byte	'C0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'C1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'C2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'C3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'C4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'C5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	425
	.byte	25,1,2,35,0,11
	.byte	'HSM',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_CBS_TCCH_Bits',0,24,191,2,3
	.word	100807
	.byte	10
	.byte	'_Ifx_CBS_TCIP_Bits',0,24,194,2,16,4,11
	.byte	'P0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	425
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_CBS_TCIP_Bits',0,24,205,2,3
	.word	100981
	.byte	10
	.byte	'_Ifx_CBS_TCM_Bits',0,24,208,2,16,4,11
	.byte	'BRK',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'SUS',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	600
	.byte	6,0,2,35,0,11
	.byte	'T0',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'T1',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'T2',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'T3',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	425
	.byte	20,0,2,35,0,0,36
	.byte	'Ifx_CBS_TCM_Bits',0,24,218,2,3
	.word	101168
	.byte	10
	.byte	'_Ifx_CBS_TCTGB_Bits',0,24,221,2,16,4,11
	.byte	'OTGB0',0,2
	.word	617
	.byte	16,0,2,35,0,11
	.byte	'OTGB1',0,2
	.word	617
	.byte	16,0,2,35,2,0,36
	.byte	'Ifx_CBS_TCTGB_Bits',0,24,225,2,3
	.word	101350
	.byte	10
	.byte	'_Ifx_CBS_TCTL_Bits',0,24,228,2,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'TL1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'TL2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'TL3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'TL4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'TL5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'TL6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'TL7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	425
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_CBS_TCTL_Bits',0,24,239,2,3
	.word	101439
	.byte	10
	.byte	'_Ifx_CBS_TIPR_Bits',0,24,242,2,16,4,11
	.byte	'PIN0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'PIN1',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'PIN2',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'PIN3',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'PIN4',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'PIN5',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'PIN6',0,4
	.word	448
	.byte	4,4,2,35,0,11
	.byte	'PIN7',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CBS_TIPR_Bits',0,24,252,2,3
	.word	101641
	.byte	10
	.byte	'_Ifx_CBS_TL1ST_Bits',0,24,255,2,16,4,11
	.byte	'C0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'C1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'C2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'C3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'C4',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'C5',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	448
	.byte	18,8,2,35,0,11
	.byte	'M0',0,4
	.word	448
	.byte	1,7,2,35,0,11
	.byte	'M1',0,4
	.word	448
	.byte	1,6,2,35,0,11
	.byte	'M2',0,4
	.word	448
	.byte	1,5,2,35,0,11
	.byte	'HSS1',0,4
	.word	448
	.byte	1,4,2,35,0,11
	.byte	'HSS0',0,4
	.word	448
	.byte	1,3,2,35,0,11
	.byte	'DMA',0,4
	.word	448
	.byte	1,2,2,35,0,11
	.byte	'DMA1',0,4
	.word	448
	.byte	1,1,2,35,0,11
	.byte	'HSM',0,4
	.word	448
	.byte	1,0,2,35,0,0,36
	.byte	'Ifx_CBS_TL1ST_Bits',0,24,144,3,3
	.word	101822
	.byte	10
	.byte	'_Ifx_CBS_TLC_Bits',0,24,147,3,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'TLSP1',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'TLSP2',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'TLSP3',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'TLSP4',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'TLSP5',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'TLSP6',0,4
	.word	448
	.byte	4,4,2,35,0,11
	.byte	'TLSP7',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CBS_TLC_Bits',0,24,157,3,3
	.word	102103
	.byte	10
	.byte	'_Ifx_CBS_TLCC_Bits',0,24,160,3,16,4,11
	.byte	'TGL',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'LE',0,4
	.word	448
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	448
	.byte	1,24,2,35,0,11
	.byte	'CLR',0,4
	.word	448
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	448
	.byte	2,20,2,35,0,11
	.byte	'STOP',0,4
	.word	448
	.byte	2,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	448
	.byte	18,0,2,35,0,0,36
	.byte	'Ifx_CBS_TLCC_Bits',0,24,169,3,3
	.word	102295
	.byte	10
	.byte	'_Ifx_CBS_TLCHE_Bits',0,24,172,3,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'TL1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'TL2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'TL3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	448
	.byte	28,0,2,35,0,0,36
	.byte	'Ifx_CBS_TLCHE_Bits',0,24,179,3,3
	.word	102476
	.byte	10
	.byte	'_Ifx_CBS_TLCHS_Bits',0,24,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	1,31,2,35,0,11
	.byte	'TL1',0,4
	.word	448
	.byte	1,30,2,35,0,11
	.byte	'TL2',0,4
	.word	448
	.byte	1,29,2,35,0,11
	.byte	'TL3',0,4
	.word	448
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	448
	.byte	28,0,2,35,0,0,36
	.byte	'Ifx_CBS_TLCHS_Bits',0,24,189,3,3
	.word	102620
	.byte	10
	.byte	'_Ifx_CBS_TLCV_Bits',0,24,192,3,16,4,11
	.byte	'CV',0,4
	.word	425
	.byte	31,1,2,35,0,11
	.byte	'SO',0,1
	.word	600
	.byte	1,0,2,35,3,0,36
	.byte	'Ifx_CBS_TLCV_Bits',0,24,196,3,3
	.word	102764
	.byte	10
	.byte	'_Ifx_CBS_TLS_Bits',0,24,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'TL1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'TL2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'TL3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'TL4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'TL5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'TL6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'TL7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	425
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_CBS_TLS_Bits',0,24,210,3,3
	.word	102845
	.byte	10
	.byte	'_Ifx_CBS_TLT_Bits',0,24,213,3,16,4,11
	.byte	'TGL',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'VTZ',0,4
	.word	448
	.byte	1,27,2,35,0,11
	.byte	'RL',0,4
	.word	448
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	448
	.byte	10,16,2,35,0,11
	.byte	'TIM',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CBS_TLT_Bits',0,24,220,3,3
	.word	103045
	.byte	10
	.byte	'_Ifx_CBS_TLTTH_Bits',0,24,223,3,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	2,30,2,35,0,11
	.byte	'TL1',0,4
	.word	448
	.byte	2,28,2,35,0,11
	.byte	'TL2',0,4
	.word	448
	.byte	2,26,2,35,0,11
	.byte	'TL3',0,4
	.word	448
	.byte	2,24,2,35,0,11
	.byte	'TL4',0,4
	.word	448
	.byte	2,22,2,35,0,11
	.byte	'TL5',0,4
	.word	448
	.byte	2,20,2,35,0,11
	.byte	'TL6',0,4
	.word	448
	.byte	2,18,2,35,0,11
	.byte	'TL7',0,4
	.word	448
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CBS_TLTTH_Bits',0,24,234,3,3
	.word	103177
	.byte	10
	.byte	'_Ifx_CBS_TOPPS_Bits',0,24,237,3,16,4,11
	.byte	'PIN0',0,4
	.word	448
	.byte	2,30,2,35,0,11
	.byte	'PIN1',0,4
	.word	448
	.byte	2,28,2,35,0,11
	.byte	'PIN2',0,4
	.word	448
	.byte	2,26,2,35,0,11
	.byte	'PIN3',0,4
	.word	448
	.byte	2,24,2,35,0,11
	.byte	'PIN4',0,4
	.word	448
	.byte	2,22,2,35,0,11
	.byte	'PIN5',0,4
	.word	448
	.byte	2,20,2,35,0,11
	.byte	'PIN6',0,4
	.word	448
	.byte	2,18,2,35,0,11
	.byte	'PIN7',0,4
	.word	448
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CBS_TOPPS_Bits',0,24,248,3,3
	.word	103382
	.byte	10
	.byte	'_Ifx_CBS_TOPR_Bits',0,24,251,3,16,4,11
	.byte	'PIN0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'PIN1',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'PIN2',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'PIN3',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'PIN4',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'PIN5',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'PIN6',0,4
	.word	448
	.byte	4,4,2,35,0,11
	.byte	'PIN7',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CBS_TOPR_Bits',0,24,133,4,3
	.word	103588
	.byte	10
	.byte	'_Ifx_CBS_TRC_Bits',0,24,136,4,16,4,11
	.byte	'HALT',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'BRKOUT',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'BT1',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	448
	.byte	11,12,2,35,0,11
	.byte	'BRKIN',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'SUSIN',0,4
	.word	448
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CBS_TRC_Bits',0,24,145,4,3
	.word	103769
	.byte	10
	.byte	'_Ifx_CBS_TREC_Bits',0,24,148,4,16,4,11
	.byte	'TR0EV',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'TR2EV',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'TR4EV',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'TR6EV',0,4
	.word	448
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CBS_TREC_Bits',0,24,158,4,3
	.word	103948
	.byte	10
	.byte	'_Ifx_CBS_TRHSM_Bits',0,24,161,4,16,4,11
	.byte	'HALT',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'BRKOUT',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'BT1',0,4
	.word	448
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	448
	.byte	11,12,2,35,0,11
	.byte	'BRKIN',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'SUSIN',0,4
	.word	448
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CBS_TRHSM_Bits',0,24,170,4,3
	.word	104160
	.byte	10
	.byte	'_Ifx_CBS_TRIG_Bits',0,24,173,4,16,4,11
	.byte	'TRGX_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'TRGX_1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'TRGX_2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'TRGX_3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'TRGX_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'TRGX_5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'TRGX_6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'TRGX_7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'TRGX_8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'TRGX_9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'TRGX_10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'TRGX_11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'TRGX_12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'TRGX_13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'TRGX_14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'TRGX_15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	600
	.byte	8,0,2,35,2,11
	.byte	'X',0,1
	.word	600
	.byte	8,0,2,35,3,0,36
	.byte	'Ifx_CBS_TRIG_Bits',0,24,193,4,3
	.word	104343
	.byte	10
	.byte	'_Ifx_CBS_TRIGC_Bits',0,24,196,4,16,4,11
	.byte	'TRGX_0',0,1
	.word	600
	.byte	1,7,2,35,0,11
	.byte	'TRGX_1',0,1
	.word	600
	.byte	1,6,2,35,0,11
	.byte	'TRGX_2',0,1
	.word	600
	.byte	1,5,2,35,0,11
	.byte	'TRGX_3',0,1
	.word	600
	.byte	1,4,2,35,0,11
	.byte	'TRGX_4',0,1
	.word	600
	.byte	1,3,2,35,0,11
	.byte	'TRGX_5',0,1
	.word	600
	.byte	1,2,2,35,0,11
	.byte	'TRGX_6',0,1
	.word	600
	.byte	1,1,2,35,0,11
	.byte	'TRGX_7',0,1
	.word	600
	.byte	1,0,2,35,0,11
	.byte	'TRGX_8',0,1
	.word	600
	.byte	1,7,2,35,1,11
	.byte	'TRGX_9',0,1
	.word	600
	.byte	1,6,2,35,1,11
	.byte	'TRGX_10',0,1
	.word	600
	.byte	1,5,2,35,1,11
	.byte	'TRGX_11',0,1
	.word	600
	.byte	1,4,2,35,1,11
	.byte	'TRGX_12',0,1
	.word	600
	.byte	1,3,2,35,1,11
	.byte	'TRGX_13',0,1
	.word	600
	.byte	1,2,2,35,1,11
	.byte	'TRGX_14',0,1
	.word	600
	.byte	1,1,2,35,1,11
	.byte	'TRGX_15',0,1
	.word	600
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	600
	.byte	8,0,2,35,2,11
	.byte	'X',0,1
	.word	600
	.byte	8,0,2,35,3,0,36
	.byte	'Ifx_CBS_TRIGC_Bits',0,24,216,4,3
	.word	104726
	.byte	10
	.byte	'_Ifx_CBS_TRIGS_Bits',0,24,219,4,16,4,11
	.byte	'BITNUM',0,4
	.word	448
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	24,0,2,35,0,0,36
	.byte	'Ifx_CBS_TRIGS_Bits',0,24,223,4,3
	.word	105111
	.byte	10
	.byte	'_Ifx_CBS_TRMC_Bits',0,24,226,4,16,4,11
	.byte	'reserved_0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'BRKOUT',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'SUSOUT',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'BRKIN',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	448
	.byte	8,0,2,35,0,0,36
	.byte	'Ifx_CBS_TRMC_Bits',0,24,235,4,3
	.word	105206
	.byte	10
	.byte	'_Ifx_CBS_TRMT_Bits',0,24,238,4,16,4,11
	.byte	'TG0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'TG1',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'TG2',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'TG3',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	448
	.byte	16,0,2,35,0,0,36
	.byte	'Ifx_CBS_TRMT_Bits',0,24,245,4,3
	.word	105403
	.byte	10
	.byte	'_Ifx_CBS_TRSS_Bits',0,24,248,4,16,4,11
	.byte	'TT',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'IFS',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	448
	.byte	8,16,2,35,0,11
	.byte	'SRC0',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'SRC1',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	448
	.byte	8,0,2,35,0,0,36
	.byte	'Ifx_CBS_TRSS_Bits',0,24,128,5,3
	.word	105539
	.byte	10
	.byte	'_Ifx_CBS_TRTGB_H_Bits',0,24,131,5,16,4,11
	.byte	'TG8',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'TG9',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'TG10',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'TG11',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'TG12',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'TG13',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'TG14',0,4
	.word	448
	.byte	4,4,2,35,0,11
	.byte	'TG15',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CBS_TRTGB_H_Bits',0,24,141,5,3
	.word	105698
	.byte	10
	.byte	'_Ifx_CBS_TRTGB_L_Bits',0,24,144,5,16,4,11
	.byte	'TG0',0,4
	.word	448
	.byte	4,28,2,35,0,11
	.byte	'TG1',0,4
	.word	448
	.byte	4,24,2,35,0,11
	.byte	'TG2',0,4
	.word	448
	.byte	4,20,2,35,0,11
	.byte	'TG3',0,4
	.word	448
	.byte	4,16,2,35,0,11
	.byte	'TG4',0,4
	.word	448
	.byte	4,12,2,35,0,11
	.byte	'TG5',0,4
	.word	448
	.byte	4,8,2,35,0,11
	.byte	'TG6',0,4
	.word	448
	.byte	4,4,2,35,0,11
	.byte	'TG7',0,4
	.word	448
	.byte	4,0,2,35,0,0,36
	.byte	'Ifx_CBS_TRTGB_L_Bits',0,24,154,5,3
	.word	105883
	.byte	12,24,162,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97130
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_ACCEN0',0,24,167,5,3
	.word	106062
	.byte	12,24,170,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97687
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_ACCEN1',0,24,175,5,3
	.word	106126
	.byte	12,24,178,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97764
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_COMDATA',0,24,183,5,3
	.word	106190
	.byte	12,24,186,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97837
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_ICTSA',0,24,191,5,3
	.word	106255
	.byte	12,24,194,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97906
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_ICTTA',0,24,199,5,3
	.word	106318
	.byte	12,24,202,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97975
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_IFSA',0,24,207,5,3
	.word	106381
	.byte	12,24,210,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98044
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_IFSC',0,24,215,5,3
	.word	106443
	.byte	12,24,218,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98341
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_INTMOD',0,24,223,5,3
	.word	106505
	.byte	12,24,226,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98750
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_IOSR',0,24,231,5,3
	.word	106569
	.byte	12,24,234,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	98981
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_JDPID',0,24,239,5,3
	.word	106631
	.byte	12,24,242,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99097
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_JTAGID',0,24,247,5,3
	.word	106694
	.byte	12,24,250,5,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99173
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_OCNTRL',0,24,255,5,3
	.word	106758
	.byte	12,24,130,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99770
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_OEC',0,24,135,6,3
	.word	106822
	.byte	12,24,138,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	99987
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_OIFM',0,24,143,6,3
	.word	106883
	.byte	12,24,146,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100218
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_OSTATE',0,24,151,6,3
	.word	106945
	.byte	12,24,154,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100633
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TCCB',0,24,159,6,3
	.word	107009
	.byte	12,24,162,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100807
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TCCH',0,24,167,6,3
	.word	107071
	.byte	12,24,170,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100981
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TCIP',0,24,175,6,3
	.word	107133
	.byte	12,24,178,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101168
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TCM',0,24,183,6,3
	.word	107195
	.byte	12,24,186,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101350
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TCTGB',0,24,191,6,3
	.word	107256
	.byte	12,24,194,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101439
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TCTL',0,24,199,6,3
	.word	107319
	.byte	12,24,202,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101641
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TIPR',0,24,207,6,3
	.word	107381
	.byte	12,24,210,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101822
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TL1ST',0,24,215,6,3
	.word	107443
	.byte	12,24,218,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102103
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TLC',0,24,223,6,3
	.word	107506
	.byte	12,24,226,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102295
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TLCC',0,24,231,6,3
	.word	107567
	.byte	12,24,234,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102476
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TLCHE',0,24,239,6,3
	.word	107629
	.byte	12,24,242,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102620
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TLCHS',0,24,247,6,3
	.word	107692
	.byte	12,24,250,6,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102764
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TLCV',0,24,255,6,3
	.word	107755
	.byte	12,24,130,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102845
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TLS',0,24,135,7,3
	.word	107817
	.byte	12,24,138,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103045
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TLT',0,24,143,7,3
	.word	107878
	.byte	12,24,146,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103177
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TLTTH',0,24,151,7,3
	.word	107939
	.byte	12,24,154,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103382
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TOPPS',0,24,159,7,3
	.word	108002
	.byte	12,24,162,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103588
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TOPR',0,24,167,7,3
	.word	108065
	.byte	12,24,170,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103769
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRC',0,24,175,7,3
	.word	108127
	.byte	12,24,178,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103948
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TREC',0,24,183,7,3
	.word	108188
	.byte	12,24,186,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104160
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRHSM',0,24,191,7,3
	.word	108250
	.byte	12,24,194,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104343
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRIG',0,24,199,7,3
	.word	108313
	.byte	12,24,202,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104726
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRIGC',0,24,207,7,3
	.word	108375
	.byte	12,24,210,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105111
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRIGS',0,24,215,7,3
	.word	108438
	.byte	12,24,218,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105206
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRMC',0,24,223,7,3
	.word	108501
	.byte	12,24,226,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105403
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRMT',0,24,231,7,3
	.word	108563
	.byte	12,24,234,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105539
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRSS',0,24,239,7,3
	.word	108625
	.byte	12,24,242,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105698
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRTGB_H',0,24,247,7,3
	.word	108687
	.byte	12,24,250,7,9,4,13
	.byte	'U',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105883
	.byte	4,2,35,0,0,36
	.byte	'Ifx_CBS_TRTGB_L',0,24,255,7,3
	.word	108752
	.byte	10
	.byte	'_Ifx_CBS_TRTGB',0,24,139,8,25,8,13
	.byte	'L',0
	.word	108752
	.byte	4,2,35,0,13
	.byte	'H',0
	.word	108687
	.byte	4,2,35,4,0,14
	.word	108817
	.byte	36
	.byte	'Ifx_CBS_TRTGB',0,24,143,8,3
	.word	108861
	.byte	17,12,157,1,9,1,18
	.byte	'IfxStm_Comparator_0',0,0,18
	.byte	'IfxStm_Comparator_1',0,1,0,36
	.byte	'IfxStm_Comparator',0,12,161,1,3
	.word	108889
	.byte	17,12,165,1,9,1,18
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,18
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0,36
	.byte	'IfxStm_ComparatorInterrupt',0,12,169,1,3
	.word	108967
	.byte	17,12,173,1,9,1,18
	.byte	'IfxStm_ComparatorOffset_0',0,0,18
	.byte	'IfxStm_ComparatorOffset_1',0,1,18
	.byte	'IfxStm_ComparatorOffset_2',0,2,18
	.byte	'IfxStm_ComparatorOffset_3',0,3,18
	.byte	'IfxStm_ComparatorOffset_4',0,4,18
	.byte	'IfxStm_ComparatorOffset_5',0,5,18
	.byte	'IfxStm_ComparatorOffset_6',0,6,18
	.byte	'IfxStm_ComparatorOffset_7',0,7,18
	.byte	'IfxStm_ComparatorOffset_8',0,8,18
	.byte	'IfxStm_ComparatorOffset_9',0,9,18
	.byte	'IfxStm_ComparatorOffset_10',0,10,18
	.byte	'IfxStm_ComparatorOffset_11',0,11,18
	.byte	'IfxStm_ComparatorOffset_12',0,12,18
	.byte	'IfxStm_ComparatorOffset_13',0,13,18
	.byte	'IfxStm_ComparatorOffset_14',0,14,18
	.byte	'IfxStm_ComparatorOffset_15',0,15,18
	.byte	'IfxStm_ComparatorOffset_16',0,16,18
	.byte	'IfxStm_ComparatorOffset_17',0,17,18
	.byte	'IfxStm_ComparatorOffset_18',0,18,18
	.byte	'IfxStm_ComparatorOffset_19',0,19,18
	.byte	'IfxStm_ComparatorOffset_20',0,20,18
	.byte	'IfxStm_ComparatorOffset_21',0,21,18
	.byte	'IfxStm_ComparatorOffset_22',0,22,18
	.byte	'IfxStm_ComparatorOffset_23',0,23,18
	.byte	'IfxStm_ComparatorOffset_24',0,24,18
	.byte	'IfxStm_ComparatorOffset_25',0,25,18
	.byte	'IfxStm_ComparatorOffset_26',0,26,18
	.byte	'IfxStm_ComparatorOffset_27',0,27,18
	.byte	'IfxStm_ComparatorOffset_28',0,28,18
	.byte	'IfxStm_ComparatorOffset_29',0,29,18
	.byte	'IfxStm_ComparatorOffset_30',0,30,18
	.byte	'IfxStm_ComparatorOffset_31',0,31,0,36
	.byte	'IfxStm_ComparatorOffset',0,12,207,1,3
	.word	109076
	.byte	17,12,211,1,9,1,18
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,18
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,18
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,18
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,18
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,18
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,18
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,18
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,18
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,18
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,18
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,18
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,18
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,18
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,18
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,18
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,18
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,18
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,18
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,18
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,18
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,18
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,18
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,18
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,18
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,18
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,18
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,18
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,18
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,18
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,18
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,18
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,36
	.byte	'IfxStm_ComparatorSize',0,12,245,1,3
	.word	110034
	.byte	17,12,250,1,9,1,18
	.byte	'IfxStm_SleepMode_enable',0,0,18
	.byte	'IfxStm_SleepMode_disable',0,1,0,36
	.byte	'IfxStm_SleepMode',0,12,254,1,3
	.word	111054
	.byte	17,12,130,2,9,1,18
	.byte	'IfxStm_SuspendMode_none',0,0,18
	.byte	'IfxStm_SuspendMode_hard',0,1,18
	.byte	'IfxStm_SuspendMode_soft',0,2,0,36
	.byte	'IfxStm_SuspendMode',0,12,135,2,3
	.word	111140
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L8:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,11,1,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,26,46,1,49,19,0,0,27,5,0,49,19,0,0,28,46,1,3,8,58,15,59,15,57,15,54,15,39
	.byte	12,63,12,60,12,0,0,29,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,30,29,1,49,19,0,0,31
	.byte	11,0,49,19,0,0,32,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,33,11,1,49,19,0,0,34,46
	.byte	0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,35,24,0,58,15,59,15,57,15,0,0,36,22,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,37,21,0,54,15,0,0,38,19,1,58,15,59,15,57,15,11,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L9:
	.word	.L37-.L36
.L36:
	.half	3
	.word	.L39-.L38
.L38:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Stm\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\0_AppSw\\Tricore\\UART',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxSrc.h',0,6,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxStm.h',0,7,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\SMU_Reset_Alarm.h',0,0,0,0
	.byte	'UART_Logging.h',0,8,0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Cpu0_Main.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0
	.byte	'IfxCbs_regdef.h',0,3,0,0,0
.L39:
.L37:
	.sdecl	'.debug_info',debug,cluster('core0_main')
	.sect	'.debug_info'
.L10:
	.word	353
	.half	3
	.word	.L11
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Cpu0_Main.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\Debug\\',0,12,1
	.word	.L13,.L12
	.byte	2
	.word	.L6
	.byte	3
	.byte	'core0_main',0,1,47,6,1,1,1
	.word	.L5,.L17,.L4
	.byte	4
	.word	.L5,.L17
	.byte	5
	.word	.L18,.L5,.L19
	.byte	6
	.word	.L20,.L5,.L19
	.byte	0,5
	.word	.L21,.L22,.L23
	.byte	7
	.word	.L24,.L25
	.byte	7
	.word	.L26,.L27
	.byte	8
	.word	.L28,.L22,.L23
	.byte	5
	.word	.L29,.L22,.L30
	.byte	7
	.word	.L31,.L32
	.byte	6
	.word	.L33,.L22,.L30
	.byte	0,5
	.word	.L29,.L2,.L34
	.byte	7
	.word	.L31,.L32
	.byte	6
	.word	.L33,.L2,.L34
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('core0_main')
	.sect	'.debug_abbrev'
.L11:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,0,49,16,17,1,18,1
	.byte	0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('core0_main')
	.sect	'.debug_line'
.L12:
	.word	.L41-.L40
.L40:
	.half	3
	.word	.L43-.L42
.L42:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\0_Src\\4_McHal\\Tricore\\Stm\\Std',0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Cpu0_Main.c',0,0,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxStm.h',0,2,0,0,0
.L43:
	.byte	4,2,5,13,7,0,5,2
	.word	.L5
	.byte	3,246,5,1,4,1,5,66,9
	.half	.L19-.L5
	.byte	3,191,122,1,5,72,9
	.half	.L44-.L19
	.byte	3,1,1,5,23,9
	.half	.L45-.L44
	.byte	3,3,1,9
	.half	.L46-.L45
	.byte	3,1,1,5,39,9
	.half	.L47-.L46
	.byte	1,5,13,9
	.half	.L48-.L47
	.byte	3,1,1,5,21,9
	.half	.L49-.L48
	.byte	3,2,1,4,3,9
	.half	.L22-.L49
	.byte	3,160,4,1,5,49,9
	.half	.L30-.L22
	.byte	3,250,0,1,5,21,9
	.half	.L2-.L30
	.byte	3,134,127,1,5,34,9
	.half	.L34-.L2
	.byte	3,250,0,1,5,54,9
	.half	.L50-.L34
	.byte	1,4,1,5,21,7,9
	.half	.L23-.L50
	.byte	3,233,122,1,5,22,9
	.half	.L51-.L23
	.byte	3,1,1,5,12,9
	.half	.L3-.L51
	.byte	3,2,1,5,1,9
	.half	.L14-.L3
	.byte	3,3,0,1,1
.L41:
	.sdecl	'.debug_ranges',debug,cluster('core0_main')
	.sect	'.debug_ranges'
.L13:
	.word	-1,.L5,0,.L14-.L5,0,0
	.sdecl	'.debug_info',debug,cluster('g_cpuSyncEvent')
	.sect	'.debug_info'
.L15:
	.word	189
	.half	3
	.word	.L16
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\Cpu0_Main.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC375_SMU_Reset_Alarm\\Debug\\',0,12,1,2
	.word	.L6
	.byte	3
	.byte	'g_cpuSyncEvent',0,16,45,31
	.word	.L35
	.byte	1,5,3
	.word	g_cpuSyncEvent
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_cpuSyncEvent')
	.sect	'.debug_abbrev'
.L16:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('core0_main')
	.sect	'.debug_loc'
.L4:
	.word	-1,.L5,0,.L17-.L5
	.half	2
	.byte	138,0
	.word	0,0
.L32:
	.word	0,0
.L25:
	.word	0,0
.L27:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L52:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('core0_main')
	.sect	'.debug_frame'
	.word	12
	.word	.L52,.L5,.L17-.L5

; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    69      {
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    70      }
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    71  }
; ..\0_Src\0_AppSw\Tricore\Main\Cpu0_Main.c	    72  

	; Module end
